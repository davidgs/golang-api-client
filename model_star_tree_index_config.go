/*
Pinot Controller API

APIs for accessing Pinot Controller information

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the StarTreeIndexConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &StarTreeIndexConfig{}

// StarTreeIndexConfig struct for StarTreeIndexConfig
type StarTreeIndexConfig struct {
	DimensionsSplitOrder []string `json:"dimensionsSplitOrder"`
	SkipStarNodeCreationForDimensions []string `json:"skipStarNodeCreationForDimensions,omitempty"`
	FunctionColumnPairs []string `json:"functionColumnPairs"`
	MaxLeafRecords *int32 `json:"maxLeafRecords,omitempty"`
}

// NewStarTreeIndexConfig instantiates a new StarTreeIndexConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStarTreeIndexConfig(dimensionsSplitOrder []string, functionColumnPairs []string) *StarTreeIndexConfig {
	this := StarTreeIndexConfig{}
	this.DimensionsSplitOrder = dimensionsSplitOrder
	this.FunctionColumnPairs = functionColumnPairs
	return &this
}

// NewStarTreeIndexConfigWithDefaults instantiates a new StarTreeIndexConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStarTreeIndexConfigWithDefaults() *StarTreeIndexConfig {
	this := StarTreeIndexConfig{}
	return &this
}

// GetDimensionsSplitOrder returns the DimensionsSplitOrder field value
func (o *StarTreeIndexConfig) GetDimensionsSplitOrder() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.DimensionsSplitOrder
}

// GetDimensionsSplitOrderOk returns a tuple with the DimensionsSplitOrder field value
// and a boolean to check if the value has been set.
func (o *StarTreeIndexConfig) GetDimensionsSplitOrderOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DimensionsSplitOrder, true
}

// SetDimensionsSplitOrder sets field value
func (o *StarTreeIndexConfig) SetDimensionsSplitOrder(v []string) {
	o.DimensionsSplitOrder = v
}

// GetSkipStarNodeCreationForDimensions returns the SkipStarNodeCreationForDimensions field value if set, zero value otherwise.
func (o *StarTreeIndexConfig) GetSkipStarNodeCreationForDimensions() []string {
	if o == nil || IsNil(o.SkipStarNodeCreationForDimensions) {
		var ret []string
		return ret
	}
	return o.SkipStarNodeCreationForDimensions
}

// GetSkipStarNodeCreationForDimensionsOk returns a tuple with the SkipStarNodeCreationForDimensions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StarTreeIndexConfig) GetSkipStarNodeCreationForDimensionsOk() ([]string, bool) {
	if o == nil || IsNil(o.SkipStarNodeCreationForDimensions) {
		return nil, false
	}
	return o.SkipStarNodeCreationForDimensions, true
}

// HasSkipStarNodeCreationForDimensions returns a boolean if a field has been set.
func (o *StarTreeIndexConfig) HasSkipStarNodeCreationForDimensions() bool {
	if o != nil && !IsNil(o.SkipStarNodeCreationForDimensions) {
		return true
	}

	return false
}

// SetSkipStarNodeCreationForDimensions gets a reference to the given []string and assigns it to the SkipStarNodeCreationForDimensions field.
func (o *StarTreeIndexConfig) SetSkipStarNodeCreationForDimensions(v []string) {
	o.SkipStarNodeCreationForDimensions = v
}

// GetFunctionColumnPairs returns the FunctionColumnPairs field value
func (o *StarTreeIndexConfig) GetFunctionColumnPairs() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.FunctionColumnPairs
}

// GetFunctionColumnPairsOk returns a tuple with the FunctionColumnPairs field value
// and a boolean to check if the value has been set.
func (o *StarTreeIndexConfig) GetFunctionColumnPairsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.FunctionColumnPairs, true
}

// SetFunctionColumnPairs sets field value
func (o *StarTreeIndexConfig) SetFunctionColumnPairs(v []string) {
	o.FunctionColumnPairs = v
}

// GetMaxLeafRecords returns the MaxLeafRecords field value if set, zero value otherwise.
func (o *StarTreeIndexConfig) GetMaxLeafRecords() int32 {
	if o == nil || IsNil(o.MaxLeafRecords) {
		var ret int32
		return ret
	}
	return *o.MaxLeafRecords
}

// GetMaxLeafRecordsOk returns a tuple with the MaxLeafRecords field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StarTreeIndexConfig) GetMaxLeafRecordsOk() (*int32, bool) {
	if o == nil || IsNil(o.MaxLeafRecords) {
		return nil, false
	}
	return o.MaxLeafRecords, true
}

// HasMaxLeafRecords returns a boolean if a field has been set.
func (o *StarTreeIndexConfig) HasMaxLeafRecords() bool {
	if o != nil && !IsNil(o.MaxLeafRecords) {
		return true
	}

	return false
}

// SetMaxLeafRecords gets a reference to the given int32 and assigns it to the MaxLeafRecords field.
func (o *StarTreeIndexConfig) SetMaxLeafRecords(v int32) {
	o.MaxLeafRecords = &v
}

func (o StarTreeIndexConfig) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o StarTreeIndexConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	// skip: dimensionsSplitOrder is readOnly
	// skip: skipStarNodeCreationForDimensions is readOnly
	// skip: functionColumnPairs is readOnly
	// skip: maxLeafRecords is readOnly
	return toSerialize, nil
}

type NullableStarTreeIndexConfig struct {
	value *StarTreeIndexConfig
	isSet bool
}

func (v NullableStarTreeIndexConfig) Get() *StarTreeIndexConfig {
	return v.value
}

func (v *NullableStarTreeIndexConfig) Set(val *StarTreeIndexConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableStarTreeIndexConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableStarTreeIndexConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStarTreeIndexConfig(val *StarTreeIndexConfig) *NullableStarTreeIndexConfig {
	return &NullableStarTreeIndexConfig{value: val, isSet: true}
}

func (v NullableStarTreeIndexConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStarTreeIndexConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


