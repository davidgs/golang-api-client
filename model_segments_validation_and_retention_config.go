/*
Pinot Controller API

APIs for accessing Pinot Controller information

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the SegmentsValidationAndRetentionConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SegmentsValidationAndRetentionConfig{}

// SegmentsValidationAndRetentionConfig struct for SegmentsValidationAndRetentionConfig
type SegmentsValidationAndRetentionConfig struct {
	TimeType *string `json:"timeType,omitempty"`
	SchemaName *string `json:"schemaName,omitempty"`
	Replication *string `json:"replication,omitempty"`
	RetentionTimeUnit *string `json:"retentionTimeUnit,omitempty"`
	RetentionTimeValue *string `json:"retentionTimeValue,omitempty"`
	ReplicasPerPartition *string `json:"replicasPerPartition,omitempty"`
	TimeColumnName *string `json:"timeColumnName,omitempty"`
	CrypterClassName *string `json:"crypterClassName,omitempty"`
	DeletedSegmentsRetentionPeriod *string `json:"deletedSegmentsRetentionPeriod,omitempty"`
	SegmentAssignmentStrategy *string `json:"segmentAssignmentStrategy,omitempty"`
	SegmentPushFrequency *string `json:"segmentPushFrequency,omitempty"`
	SegmentPushType *string `json:"segmentPushType,omitempty"`
	ReplicaGroupStrategyConfig *ReplicaGroupStrategyConfig `json:"replicaGroupStrategyConfig,omitempty"`
	CompletionConfig *CompletionConfig `json:"completionConfig,omitempty"`
	PeerSegmentDownloadScheme *string `json:"peerSegmentDownloadScheme,omitempty"`
	MinimizeDataMovement *bool `json:"minimizeDataMovement,omitempty"`
}

// NewSegmentsValidationAndRetentionConfig instantiates a new SegmentsValidationAndRetentionConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSegmentsValidationAndRetentionConfig() *SegmentsValidationAndRetentionConfig {
	this := SegmentsValidationAndRetentionConfig{}
	return &this
}

// NewSegmentsValidationAndRetentionConfigWithDefaults instantiates a new SegmentsValidationAndRetentionConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSegmentsValidationAndRetentionConfigWithDefaults() *SegmentsValidationAndRetentionConfig {
	this := SegmentsValidationAndRetentionConfig{}
	return &this
}

// GetTimeType returns the TimeType field value if set, zero value otherwise.
func (o *SegmentsValidationAndRetentionConfig) GetTimeType() string {
	if o == nil || IsNil(o.TimeType) {
		var ret string
		return ret
	}
	return *o.TimeType
}

// GetTimeTypeOk returns a tuple with the TimeType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SegmentsValidationAndRetentionConfig) GetTimeTypeOk() (*string, bool) {
	if o == nil || IsNil(o.TimeType) {
		return nil, false
	}
	return o.TimeType, true
}

// HasTimeType returns a boolean if a field has been set.
func (o *SegmentsValidationAndRetentionConfig) HasTimeType() bool {
	if o != nil && !IsNil(o.TimeType) {
		return true
	}

	return false
}

// SetTimeType gets a reference to the given string and assigns it to the TimeType field.
func (o *SegmentsValidationAndRetentionConfig) SetTimeType(v string) {
	o.TimeType = &v
}

// GetSchemaName returns the SchemaName field value if set, zero value otherwise.
func (o *SegmentsValidationAndRetentionConfig) GetSchemaName() string {
	if o == nil || IsNil(o.SchemaName) {
		var ret string
		return ret
	}
	return *o.SchemaName
}

// GetSchemaNameOk returns a tuple with the SchemaName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SegmentsValidationAndRetentionConfig) GetSchemaNameOk() (*string, bool) {
	if o == nil || IsNil(o.SchemaName) {
		return nil, false
	}
	return o.SchemaName, true
}

// HasSchemaName returns a boolean if a field has been set.
func (o *SegmentsValidationAndRetentionConfig) HasSchemaName() bool {
	if o != nil && !IsNil(o.SchemaName) {
		return true
	}

	return false
}

// SetSchemaName gets a reference to the given string and assigns it to the SchemaName field.
func (o *SegmentsValidationAndRetentionConfig) SetSchemaName(v string) {
	o.SchemaName = &v
}

// GetReplication returns the Replication field value if set, zero value otherwise.
func (o *SegmentsValidationAndRetentionConfig) GetReplication() string {
	if o == nil || IsNil(o.Replication) {
		var ret string
		return ret
	}
	return *o.Replication
}

// GetReplicationOk returns a tuple with the Replication field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SegmentsValidationAndRetentionConfig) GetReplicationOk() (*string, bool) {
	if o == nil || IsNil(o.Replication) {
		return nil, false
	}
	return o.Replication, true
}

// HasReplication returns a boolean if a field has been set.
func (o *SegmentsValidationAndRetentionConfig) HasReplication() bool {
	if o != nil && !IsNil(o.Replication) {
		return true
	}

	return false
}

// SetReplication gets a reference to the given string and assigns it to the Replication field.
func (o *SegmentsValidationAndRetentionConfig) SetReplication(v string) {
	o.Replication = &v
}

// GetRetentionTimeUnit returns the RetentionTimeUnit field value if set, zero value otherwise.
func (o *SegmentsValidationAndRetentionConfig) GetRetentionTimeUnit() string {
	if o == nil || IsNil(o.RetentionTimeUnit) {
		var ret string
		return ret
	}
	return *o.RetentionTimeUnit
}

// GetRetentionTimeUnitOk returns a tuple with the RetentionTimeUnit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SegmentsValidationAndRetentionConfig) GetRetentionTimeUnitOk() (*string, bool) {
	if o == nil || IsNil(o.RetentionTimeUnit) {
		return nil, false
	}
	return o.RetentionTimeUnit, true
}

// HasRetentionTimeUnit returns a boolean if a field has been set.
func (o *SegmentsValidationAndRetentionConfig) HasRetentionTimeUnit() bool {
	if o != nil && !IsNil(o.RetentionTimeUnit) {
		return true
	}

	return false
}

// SetRetentionTimeUnit gets a reference to the given string and assigns it to the RetentionTimeUnit field.
func (o *SegmentsValidationAndRetentionConfig) SetRetentionTimeUnit(v string) {
	o.RetentionTimeUnit = &v
}

// GetRetentionTimeValue returns the RetentionTimeValue field value if set, zero value otherwise.
func (o *SegmentsValidationAndRetentionConfig) GetRetentionTimeValue() string {
	if o == nil || IsNil(o.RetentionTimeValue) {
		var ret string
		return ret
	}
	return *o.RetentionTimeValue
}

// GetRetentionTimeValueOk returns a tuple with the RetentionTimeValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SegmentsValidationAndRetentionConfig) GetRetentionTimeValueOk() (*string, bool) {
	if o == nil || IsNil(o.RetentionTimeValue) {
		return nil, false
	}
	return o.RetentionTimeValue, true
}

// HasRetentionTimeValue returns a boolean if a field has been set.
func (o *SegmentsValidationAndRetentionConfig) HasRetentionTimeValue() bool {
	if o != nil && !IsNil(o.RetentionTimeValue) {
		return true
	}

	return false
}

// SetRetentionTimeValue gets a reference to the given string and assigns it to the RetentionTimeValue field.
func (o *SegmentsValidationAndRetentionConfig) SetRetentionTimeValue(v string) {
	o.RetentionTimeValue = &v
}

// GetReplicasPerPartition returns the ReplicasPerPartition field value if set, zero value otherwise.
func (o *SegmentsValidationAndRetentionConfig) GetReplicasPerPartition() string {
	if o == nil || IsNil(o.ReplicasPerPartition) {
		var ret string
		return ret
	}
	return *o.ReplicasPerPartition
}

// GetReplicasPerPartitionOk returns a tuple with the ReplicasPerPartition field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SegmentsValidationAndRetentionConfig) GetReplicasPerPartitionOk() (*string, bool) {
	if o == nil || IsNil(o.ReplicasPerPartition) {
		return nil, false
	}
	return o.ReplicasPerPartition, true
}

// HasReplicasPerPartition returns a boolean if a field has been set.
func (o *SegmentsValidationAndRetentionConfig) HasReplicasPerPartition() bool {
	if o != nil && !IsNil(o.ReplicasPerPartition) {
		return true
	}

	return false
}

// SetReplicasPerPartition gets a reference to the given string and assigns it to the ReplicasPerPartition field.
func (o *SegmentsValidationAndRetentionConfig) SetReplicasPerPartition(v string) {
	o.ReplicasPerPartition = &v
}

// GetTimeColumnName returns the TimeColumnName field value if set, zero value otherwise.
func (o *SegmentsValidationAndRetentionConfig) GetTimeColumnName() string {
	if o == nil || IsNil(o.TimeColumnName) {
		var ret string
		return ret
	}
	return *o.TimeColumnName
}

// GetTimeColumnNameOk returns a tuple with the TimeColumnName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SegmentsValidationAndRetentionConfig) GetTimeColumnNameOk() (*string, bool) {
	if o == nil || IsNil(o.TimeColumnName) {
		return nil, false
	}
	return o.TimeColumnName, true
}

// HasTimeColumnName returns a boolean if a field has been set.
func (o *SegmentsValidationAndRetentionConfig) HasTimeColumnName() bool {
	if o != nil && !IsNil(o.TimeColumnName) {
		return true
	}

	return false
}

// SetTimeColumnName gets a reference to the given string and assigns it to the TimeColumnName field.
func (o *SegmentsValidationAndRetentionConfig) SetTimeColumnName(v string) {
	o.TimeColumnName = &v
}

// GetCrypterClassName returns the CrypterClassName field value if set, zero value otherwise.
func (o *SegmentsValidationAndRetentionConfig) GetCrypterClassName() string {
	if o == nil || IsNil(o.CrypterClassName) {
		var ret string
		return ret
	}
	return *o.CrypterClassName
}

// GetCrypterClassNameOk returns a tuple with the CrypterClassName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SegmentsValidationAndRetentionConfig) GetCrypterClassNameOk() (*string, bool) {
	if o == nil || IsNil(o.CrypterClassName) {
		return nil, false
	}
	return o.CrypterClassName, true
}

// HasCrypterClassName returns a boolean if a field has been set.
func (o *SegmentsValidationAndRetentionConfig) HasCrypterClassName() bool {
	if o != nil && !IsNil(o.CrypterClassName) {
		return true
	}

	return false
}

// SetCrypterClassName gets a reference to the given string and assigns it to the CrypterClassName field.
func (o *SegmentsValidationAndRetentionConfig) SetCrypterClassName(v string) {
	o.CrypterClassName = &v
}

// GetDeletedSegmentsRetentionPeriod returns the DeletedSegmentsRetentionPeriod field value if set, zero value otherwise.
func (o *SegmentsValidationAndRetentionConfig) GetDeletedSegmentsRetentionPeriod() string {
	if o == nil || IsNil(o.DeletedSegmentsRetentionPeriod) {
		var ret string
		return ret
	}
	return *o.DeletedSegmentsRetentionPeriod
}

// GetDeletedSegmentsRetentionPeriodOk returns a tuple with the DeletedSegmentsRetentionPeriod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SegmentsValidationAndRetentionConfig) GetDeletedSegmentsRetentionPeriodOk() (*string, bool) {
	if o == nil || IsNil(o.DeletedSegmentsRetentionPeriod) {
		return nil, false
	}
	return o.DeletedSegmentsRetentionPeriod, true
}

// HasDeletedSegmentsRetentionPeriod returns a boolean if a field has been set.
func (o *SegmentsValidationAndRetentionConfig) HasDeletedSegmentsRetentionPeriod() bool {
	if o != nil && !IsNil(o.DeletedSegmentsRetentionPeriod) {
		return true
	}

	return false
}

// SetDeletedSegmentsRetentionPeriod gets a reference to the given string and assigns it to the DeletedSegmentsRetentionPeriod field.
func (o *SegmentsValidationAndRetentionConfig) SetDeletedSegmentsRetentionPeriod(v string) {
	o.DeletedSegmentsRetentionPeriod = &v
}

// GetSegmentAssignmentStrategy returns the SegmentAssignmentStrategy field value if set, zero value otherwise.
func (o *SegmentsValidationAndRetentionConfig) GetSegmentAssignmentStrategy() string {
	if o == nil || IsNil(o.SegmentAssignmentStrategy) {
		var ret string
		return ret
	}
	return *o.SegmentAssignmentStrategy
}

// GetSegmentAssignmentStrategyOk returns a tuple with the SegmentAssignmentStrategy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SegmentsValidationAndRetentionConfig) GetSegmentAssignmentStrategyOk() (*string, bool) {
	if o == nil || IsNil(o.SegmentAssignmentStrategy) {
		return nil, false
	}
	return o.SegmentAssignmentStrategy, true
}

// HasSegmentAssignmentStrategy returns a boolean if a field has been set.
func (o *SegmentsValidationAndRetentionConfig) HasSegmentAssignmentStrategy() bool {
	if o != nil && !IsNil(o.SegmentAssignmentStrategy) {
		return true
	}

	return false
}

// SetSegmentAssignmentStrategy gets a reference to the given string and assigns it to the SegmentAssignmentStrategy field.
func (o *SegmentsValidationAndRetentionConfig) SetSegmentAssignmentStrategy(v string) {
	o.SegmentAssignmentStrategy = &v
}

// GetSegmentPushFrequency returns the SegmentPushFrequency field value if set, zero value otherwise.
func (o *SegmentsValidationAndRetentionConfig) GetSegmentPushFrequency() string {
	if o == nil || IsNil(o.SegmentPushFrequency) {
		var ret string
		return ret
	}
	return *o.SegmentPushFrequency
}

// GetSegmentPushFrequencyOk returns a tuple with the SegmentPushFrequency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SegmentsValidationAndRetentionConfig) GetSegmentPushFrequencyOk() (*string, bool) {
	if o == nil || IsNil(o.SegmentPushFrequency) {
		return nil, false
	}
	return o.SegmentPushFrequency, true
}

// HasSegmentPushFrequency returns a boolean if a field has been set.
func (o *SegmentsValidationAndRetentionConfig) HasSegmentPushFrequency() bool {
	if o != nil && !IsNil(o.SegmentPushFrequency) {
		return true
	}

	return false
}

// SetSegmentPushFrequency gets a reference to the given string and assigns it to the SegmentPushFrequency field.
func (o *SegmentsValidationAndRetentionConfig) SetSegmentPushFrequency(v string) {
	o.SegmentPushFrequency = &v
}

// GetSegmentPushType returns the SegmentPushType field value if set, zero value otherwise.
func (o *SegmentsValidationAndRetentionConfig) GetSegmentPushType() string {
	if o == nil || IsNil(o.SegmentPushType) {
		var ret string
		return ret
	}
	return *o.SegmentPushType
}

// GetSegmentPushTypeOk returns a tuple with the SegmentPushType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SegmentsValidationAndRetentionConfig) GetSegmentPushTypeOk() (*string, bool) {
	if o == nil || IsNil(o.SegmentPushType) {
		return nil, false
	}
	return o.SegmentPushType, true
}

// HasSegmentPushType returns a boolean if a field has been set.
func (o *SegmentsValidationAndRetentionConfig) HasSegmentPushType() bool {
	if o != nil && !IsNil(o.SegmentPushType) {
		return true
	}

	return false
}

// SetSegmentPushType gets a reference to the given string and assigns it to the SegmentPushType field.
func (o *SegmentsValidationAndRetentionConfig) SetSegmentPushType(v string) {
	o.SegmentPushType = &v
}

// GetReplicaGroupStrategyConfig returns the ReplicaGroupStrategyConfig field value if set, zero value otherwise.
func (o *SegmentsValidationAndRetentionConfig) GetReplicaGroupStrategyConfig() ReplicaGroupStrategyConfig {
	if o == nil || IsNil(o.ReplicaGroupStrategyConfig) {
		var ret ReplicaGroupStrategyConfig
		return ret
	}
	return *o.ReplicaGroupStrategyConfig
}

// GetReplicaGroupStrategyConfigOk returns a tuple with the ReplicaGroupStrategyConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SegmentsValidationAndRetentionConfig) GetReplicaGroupStrategyConfigOk() (*ReplicaGroupStrategyConfig, bool) {
	if o == nil || IsNil(o.ReplicaGroupStrategyConfig) {
		return nil, false
	}
	return o.ReplicaGroupStrategyConfig, true
}

// HasReplicaGroupStrategyConfig returns a boolean if a field has been set.
func (o *SegmentsValidationAndRetentionConfig) HasReplicaGroupStrategyConfig() bool {
	if o != nil && !IsNil(o.ReplicaGroupStrategyConfig) {
		return true
	}

	return false
}

// SetReplicaGroupStrategyConfig gets a reference to the given ReplicaGroupStrategyConfig and assigns it to the ReplicaGroupStrategyConfig field.
func (o *SegmentsValidationAndRetentionConfig) SetReplicaGroupStrategyConfig(v ReplicaGroupStrategyConfig) {
	o.ReplicaGroupStrategyConfig = &v
}

// GetCompletionConfig returns the CompletionConfig field value if set, zero value otherwise.
func (o *SegmentsValidationAndRetentionConfig) GetCompletionConfig() CompletionConfig {
	if o == nil || IsNil(o.CompletionConfig) {
		var ret CompletionConfig
		return ret
	}
	return *o.CompletionConfig
}

// GetCompletionConfigOk returns a tuple with the CompletionConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SegmentsValidationAndRetentionConfig) GetCompletionConfigOk() (*CompletionConfig, bool) {
	if o == nil || IsNil(o.CompletionConfig) {
		return nil, false
	}
	return o.CompletionConfig, true
}

// HasCompletionConfig returns a boolean if a field has been set.
func (o *SegmentsValidationAndRetentionConfig) HasCompletionConfig() bool {
	if o != nil && !IsNil(o.CompletionConfig) {
		return true
	}

	return false
}

// SetCompletionConfig gets a reference to the given CompletionConfig and assigns it to the CompletionConfig field.
func (o *SegmentsValidationAndRetentionConfig) SetCompletionConfig(v CompletionConfig) {
	o.CompletionConfig = &v
}

// GetPeerSegmentDownloadScheme returns the PeerSegmentDownloadScheme field value if set, zero value otherwise.
func (o *SegmentsValidationAndRetentionConfig) GetPeerSegmentDownloadScheme() string {
	if o == nil || IsNil(o.PeerSegmentDownloadScheme) {
		var ret string
		return ret
	}
	return *o.PeerSegmentDownloadScheme
}

// GetPeerSegmentDownloadSchemeOk returns a tuple with the PeerSegmentDownloadScheme field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SegmentsValidationAndRetentionConfig) GetPeerSegmentDownloadSchemeOk() (*string, bool) {
	if o == nil || IsNil(o.PeerSegmentDownloadScheme) {
		return nil, false
	}
	return o.PeerSegmentDownloadScheme, true
}

// HasPeerSegmentDownloadScheme returns a boolean if a field has been set.
func (o *SegmentsValidationAndRetentionConfig) HasPeerSegmentDownloadScheme() bool {
	if o != nil && !IsNil(o.PeerSegmentDownloadScheme) {
		return true
	}

	return false
}

// SetPeerSegmentDownloadScheme gets a reference to the given string and assigns it to the PeerSegmentDownloadScheme field.
func (o *SegmentsValidationAndRetentionConfig) SetPeerSegmentDownloadScheme(v string) {
	o.PeerSegmentDownloadScheme = &v
}

// GetMinimizeDataMovement returns the MinimizeDataMovement field value if set, zero value otherwise.
func (o *SegmentsValidationAndRetentionConfig) GetMinimizeDataMovement() bool {
	if o == nil || IsNil(o.MinimizeDataMovement) {
		var ret bool
		return ret
	}
	return *o.MinimizeDataMovement
}

// GetMinimizeDataMovementOk returns a tuple with the MinimizeDataMovement field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SegmentsValidationAndRetentionConfig) GetMinimizeDataMovementOk() (*bool, bool) {
	if o == nil || IsNil(o.MinimizeDataMovement) {
		return nil, false
	}
	return o.MinimizeDataMovement, true
}

// HasMinimizeDataMovement returns a boolean if a field has been set.
func (o *SegmentsValidationAndRetentionConfig) HasMinimizeDataMovement() bool {
	if o != nil && !IsNil(o.MinimizeDataMovement) {
		return true
	}

	return false
}

// SetMinimizeDataMovement gets a reference to the given bool and assigns it to the MinimizeDataMovement field.
func (o *SegmentsValidationAndRetentionConfig) SetMinimizeDataMovement(v bool) {
	o.MinimizeDataMovement = &v
}

func (o SegmentsValidationAndRetentionConfig) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SegmentsValidationAndRetentionConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TimeType) {
		toSerialize["timeType"] = o.TimeType
	}
	if !IsNil(o.SchemaName) {
		toSerialize["schemaName"] = o.SchemaName
	}
	if !IsNil(o.Replication) {
		toSerialize["replication"] = o.Replication
	}
	if !IsNil(o.RetentionTimeUnit) {
		toSerialize["retentionTimeUnit"] = o.RetentionTimeUnit
	}
	if !IsNil(o.RetentionTimeValue) {
		toSerialize["retentionTimeValue"] = o.RetentionTimeValue
	}
	if !IsNil(o.ReplicasPerPartition) {
		toSerialize["replicasPerPartition"] = o.ReplicasPerPartition
	}
	if !IsNil(o.TimeColumnName) {
		toSerialize["timeColumnName"] = o.TimeColumnName
	}
	if !IsNil(o.CrypterClassName) {
		toSerialize["crypterClassName"] = o.CrypterClassName
	}
	if !IsNil(o.DeletedSegmentsRetentionPeriod) {
		toSerialize["deletedSegmentsRetentionPeriod"] = o.DeletedSegmentsRetentionPeriod
	}
	if !IsNil(o.SegmentAssignmentStrategy) {
		toSerialize["segmentAssignmentStrategy"] = o.SegmentAssignmentStrategy
	}
	if !IsNil(o.SegmentPushFrequency) {
		toSerialize["segmentPushFrequency"] = o.SegmentPushFrequency
	}
	if !IsNil(o.SegmentPushType) {
		toSerialize["segmentPushType"] = o.SegmentPushType
	}
	if !IsNil(o.ReplicaGroupStrategyConfig) {
		toSerialize["replicaGroupStrategyConfig"] = o.ReplicaGroupStrategyConfig
	}
	if !IsNil(o.CompletionConfig) {
		toSerialize["completionConfig"] = o.CompletionConfig
	}
	if !IsNil(o.PeerSegmentDownloadScheme) {
		toSerialize["peerSegmentDownloadScheme"] = o.PeerSegmentDownloadScheme
	}
	if !IsNil(o.MinimizeDataMovement) {
		toSerialize["minimizeDataMovement"] = o.MinimizeDataMovement
	}
	return toSerialize, nil
}

type NullableSegmentsValidationAndRetentionConfig struct {
	value *SegmentsValidationAndRetentionConfig
	isSet bool
}

func (v NullableSegmentsValidationAndRetentionConfig) Get() *SegmentsValidationAndRetentionConfig {
	return v.value
}

func (v *NullableSegmentsValidationAndRetentionConfig) Set(val *SegmentsValidationAndRetentionConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableSegmentsValidationAndRetentionConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableSegmentsValidationAndRetentionConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSegmentsValidationAndRetentionConfig(val *SegmentsValidationAndRetentionConfig) *NullableSegmentsValidationAndRetentionConfig {
	return &NullableSegmentsValidationAndRetentionConfig{value: val, isSet: true}
}

func (v NullableSegmentsValidationAndRetentionConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSegmentsValidationAndRetentionConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


