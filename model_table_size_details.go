/*
Pinot Controller API

APIs for accessing Pinot Controller information

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the TableSizeDetails type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TableSizeDetails{}

// TableSizeDetails struct for TableSizeDetails
type TableSizeDetails struct {
	TableName *string `json:"tableName,omitempty"`
	ReportedSizeInBytes *int64 `json:"reportedSizeInBytes,omitempty"`
	EstimatedSizeInBytes *int64 `json:"estimatedSizeInBytes,omitempty"`
	OfflineSegments *TableSubTypeSizeDetails `json:"offlineSegments,omitempty"`
	RealtimeSegments *TableSubTypeSizeDetails `json:"realtimeSegments,omitempty"`
}

// NewTableSizeDetails instantiates a new TableSizeDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTableSizeDetails() *TableSizeDetails {
	this := TableSizeDetails{}
	return &this
}

// NewTableSizeDetailsWithDefaults instantiates a new TableSizeDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTableSizeDetailsWithDefaults() *TableSizeDetails {
	this := TableSizeDetails{}
	return &this
}

// GetTableName returns the TableName field value if set, zero value otherwise.
func (o *TableSizeDetails) GetTableName() string {
	if o == nil || IsNil(o.TableName) {
		var ret string
		return ret
	}
	return *o.TableName
}

// GetTableNameOk returns a tuple with the TableName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TableSizeDetails) GetTableNameOk() (*string, bool) {
	if o == nil || IsNil(o.TableName) {
		return nil, false
	}
	return o.TableName, true
}

// HasTableName returns a boolean if a field has been set.
func (o *TableSizeDetails) HasTableName() bool {
	if o != nil && !IsNil(o.TableName) {
		return true
	}

	return false
}

// SetTableName gets a reference to the given string and assigns it to the TableName field.
func (o *TableSizeDetails) SetTableName(v string) {
	o.TableName = &v
}

// GetReportedSizeInBytes returns the ReportedSizeInBytes field value if set, zero value otherwise.
func (o *TableSizeDetails) GetReportedSizeInBytes() int64 {
	if o == nil || IsNil(o.ReportedSizeInBytes) {
		var ret int64
		return ret
	}
	return *o.ReportedSizeInBytes
}

// GetReportedSizeInBytesOk returns a tuple with the ReportedSizeInBytes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TableSizeDetails) GetReportedSizeInBytesOk() (*int64, bool) {
	if o == nil || IsNil(o.ReportedSizeInBytes) {
		return nil, false
	}
	return o.ReportedSizeInBytes, true
}

// HasReportedSizeInBytes returns a boolean if a field has been set.
func (o *TableSizeDetails) HasReportedSizeInBytes() bool {
	if o != nil && !IsNil(o.ReportedSizeInBytes) {
		return true
	}

	return false
}

// SetReportedSizeInBytes gets a reference to the given int64 and assigns it to the ReportedSizeInBytes field.
func (o *TableSizeDetails) SetReportedSizeInBytes(v int64) {
	o.ReportedSizeInBytes = &v
}

// GetEstimatedSizeInBytes returns the EstimatedSizeInBytes field value if set, zero value otherwise.
func (o *TableSizeDetails) GetEstimatedSizeInBytes() int64 {
	if o == nil || IsNil(o.EstimatedSizeInBytes) {
		var ret int64
		return ret
	}
	return *o.EstimatedSizeInBytes
}

// GetEstimatedSizeInBytesOk returns a tuple with the EstimatedSizeInBytes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TableSizeDetails) GetEstimatedSizeInBytesOk() (*int64, bool) {
	if o == nil || IsNil(o.EstimatedSizeInBytes) {
		return nil, false
	}
	return o.EstimatedSizeInBytes, true
}

// HasEstimatedSizeInBytes returns a boolean if a field has been set.
func (o *TableSizeDetails) HasEstimatedSizeInBytes() bool {
	if o != nil && !IsNil(o.EstimatedSizeInBytes) {
		return true
	}

	return false
}

// SetEstimatedSizeInBytes gets a reference to the given int64 and assigns it to the EstimatedSizeInBytes field.
func (o *TableSizeDetails) SetEstimatedSizeInBytes(v int64) {
	o.EstimatedSizeInBytes = &v
}

// GetOfflineSegments returns the OfflineSegments field value if set, zero value otherwise.
func (o *TableSizeDetails) GetOfflineSegments() TableSubTypeSizeDetails {
	if o == nil || IsNil(o.OfflineSegments) {
		var ret TableSubTypeSizeDetails
		return ret
	}
	return *o.OfflineSegments
}

// GetOfflineSegmentsOk returns a tuple with the OfflineSegments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TableSizeDetails) GetOfflineSegmentsOk() (*TableSubTypeSizeDetails, bool) {
	if o == nil || IsNil(o.OfflineSegments) {
		return nil, false
	}
	return o.OfflineSegments, true
}

// HasOfflineSegments returns a boolean if a field has been set.
func (o *TableSizeDetails) HasOfflineSegments() bool {
	if o != nil && !IsNil(o.OfflineSegments) {
		return true
	}

	return false
}

// SetOfflineSegments gets a reference to the given TableSubTypeSizeDetails and assigns it to the OfflineSegments field.
func (o *TableSizeDetails) SetOfflineSegments(v TableSubTypeSizeDetails) {
	o.OfflineSegments = &v
}

// GetRealtimeSegments returns the RealtimeSegments field value if set, zero value otherwise.
func (o *TableSizeDetails) GetRealtimeSegments() TableSubTypeSizeDetails {
	if o == nil || IsNil(o.RealtimeSegments) {
		var ret TableSubTypeSizeDetails
		return ret
	}
	return *o.RealtimeSegments
}

// GetRealtimeSegmentsOk returns a tuple with the RealtimeSegments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TableSizeDetails) GetRealtimeSegmentsOk() (*TableSubTypeSizeDetails, bool) {
	if o == nil || IsNil(o.RealtimeSegments) {
		return nil, false
	}
	return o.RealtimeSegments, true
}

// HasRealtimeSegments returns a boolean if a field has been set.
func (o *TableSizeDetails) HasRealtimeSegments() bool {
	if o != nil && !IsNil(o.RealtimeSegments) {
		return true
	}

	return false
}

// SetRealtimeSegments gets a reference to the given TableSubTypeSizeDetails and assigns it to the RealtimeSegments field.
func (o *TableSizeDetails) SetRealtimeSegments(v TableSubTypeSizeDetails) {
	o.RealtimeSegments = &v
}

func (o TableSizeDetails) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TableSizeDetails) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TableName) {
		toSerialize["tableName"] = o.TableName
	}
	if !IsNil(o.ReportedSizeInBytes) {
		toSerialize["reportedSizeInBytes"] = o.ReportedSizeInBytes
	}
	if !IsNil(o.EstimatedSizeInBytes) {
		toSerialize["estimatedSizeInBytes"] = o.EstimatedSizeInBytes
	}
	if !IsNil(o.OfflineSegments) {
		toSerialize["offlineSegments"] = o.OfflineSegments
	}
	if !IsNil(o.RealtimeSegments) {
		toSerialize["realtimeSegments"] = o.RealtimeSegments
	}
	return toSerialize, nil
}

type NullableTableSizeDetails struct {
	value *TableSizeDetails
	isSet bool
}

func (v NullableTableSizeDetails) Get() *TableSizeDetails {
	return v.value
}

func (v *NullableTableSizeDetails) Set(val *TableSizeDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableTableSizeDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableTableSizeDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTableSizeDetails(val *TableSizeDetails) *NullableTableSizeDetails {
	return &NullableTableSizeDetails{value: val, isSet: true}
}

func (v NullableTableSizeDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTableSizeDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


