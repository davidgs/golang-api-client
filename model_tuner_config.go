/*
Pinot Controller API

APIs for accessing Pinot Controller information

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the TunerConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TunerConfig{}

// TunerConfig struct for TunerConfig
type TunerConfig struct {
	Name string `json:"name"`
	TunerProperties *map[string]string `json:"tunerProperties,omitempty"`
}

// NewTunerConfig instantiates a new TunerConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTunerConfig(name string) *TunerConfig {
	this := TunerConfig{}
	this.Name = name
	return &this
}

// NewTunerConfigWithDefaults instantiates a new TunerConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTunerConfigWithDefaults() *TunerConfig {
	this := TunerConfig{}
	return &this
}

// GetName returns the Name field value
func (o *TunerConfig) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *TunerConfig) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *TunerConfig) SetName(v string) {
	o.Name = v
}

// GetTunerProperties returns the TunerProperties field value if set, zero value otherwise.
func (o *TunerConfig) GetTunerProperties() map[string]string {
	if o == nil || IsNil(o.TunerProperties) {
		var ret map[string]string
		return ret
	}
	return *o.TunerProperties
}

// GetTunerPropertiesOk returns a tuple with the TunerProperties field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TunerConfig) GetTunerPropertiesOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.TunerProperties) {
		return nil, false
	}
	return o.TunerProperties, true
}

// HasTunerProperties returns a boolean if a field has been set.
func (o *TunerConfig) HasTunerProperties() bool {
	if o != nil && !IsNil(o.TunerProperties) {
		return true
	}

	return false
}

// SetTunerProperties gets a reference to the given map[string]string and assigns it to the TunerProperties field.
func (o *TunerConfig) SetTunerProperties(v map[string]string) {
	o.TunerProperties = &v
}

func (o TunerConfig) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TunerConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	if !IsNil(o.TunerProperties) {
		toSerialize["tunerProperties"] = o.TunerProperties
	}
	return toSerialize, nil
}

type NullableTunerConfig struct {
	value *TunerConfig
	isSet bool
}

func (v NullableTunerConfig) Get() *TunerConfig {
	return v.value
}

func (v *NullableTunerConfig) Set(val *TunerConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableTunerConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableTunerConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTunerConfig(val *TunerConfig) *NullableTunerConfig {
	return &NullableTunerConfig{value: val, isSet: true}
}

func (v NullableTunerConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTunerConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


