/*
Pinot Controller API

APIs for accessing Pinot Controller information

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the Instance type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Instance{}

// Instance struct for Instance
type Instance struct {
	Host string `json:"host"`
	Port int32 `json:"port"`
	Type string `json:"type"`
	Tags []string `json:"tags,omitempty"`
	Pools *map[string]int32 `json:"pools,omitempty"`
	GrpcPort *int32 `json:"grpcPort,omitempty"`
	AdminPort *int32 `json:"adminPort,omitempty"`
	QueryServicePort *int32 `json:"queryServicePort,omitempty"`
	QueryMailboxPort *int32 `json:"queryMailboxPort,omitempty"`
	QueriesDisabled *bool `json:"queriesDisabled,omitempty"`
}

// NewInstance instantiates a new Instance object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInstance(host string, port int32, type_ string) *Instance {
	this := Instance{}
	this.Host = host
	this.Port = port
	this.Type = type_
	return &this
}

// NewInstanceWithDefaults instantiates a new Instance object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInstanceWithDefaults() *Instance {
	this := Instance{}
	return &this
}

// GetHost returns the Host field value
func (o *Instance) GetHost() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Host
}

// GetHostOk returns a tuple with the Host field value
// and a boolean to check if the value has been set.
func (o *Instance) GetHostOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Host, true
}

// SetHost sets field value
func (o *Instance) SetHost(v string) {
	o.Host = v
}

// GetPort returns the Port field value
func (o *Instance) GetPort() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Port
}

// GetPortOk returns a tuple with the Port field value
// and a boolean to check if the value has been set.
func (o *Instance) GetPortOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Port, true
}

// SetPort sets field value
func (o *Instance) SetPort(v int32) {
	o.Port = v
}

// GetType returns the Type field value
func (o *Instance) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *Instance) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *Instance) SetType(v string) {
	o.Type = v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *Instance) GetTags() []string {
	if o == nil || IsNil(o.Tags) {
		var ret []string
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Instance) GetTagsOk() ([]string, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *Instance) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []string and assigns it to the Tags field.
func (o *Instance) SetTags(v []string) {
	o.Tags = v
}

// GetPools returns the Pools field value if set, zero value otherwise.
func (o *Instance) GetPools() map[string]int32 {
	if o == nil || IsNil(o.Pools) {
		var ret map[string]int32
		return ret
	}
	return *o.Pools
}

// GetPoolsOk returns a tuple with the Pools field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Instance) GetPoolsOk() (*map[string]int32, bool) {
	if o == nil || IsNil(o.Pools) {
		return nil, false
	}
	return o.Pools, true
}

// HasPools returns a boolean if a field has been set.
func (o *Instance) HasPools() bool {
	if o != nil && !IsNil(o.Pools) {
		return true
	}

	return false
}

// SetPools gets a reference to the given map[string]int32 and assigns it to the Pools field.
func (o *Instance) SetPools(v map[string]int32) {
	o.Pools = &v
}

// GetGrpcPort returns the GrpcPort field value if set, zero value otherwise.
func (o *Instance) GetGrpcPort() int32 {
	if o == nil || IsNil(o.GrpcPort) {
		var ret int32
		return ret
	}
	return *o.GrpcPort
}

// GetGrpcPortOk returns a tuple with the GrpcPort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Instance) GetGrpcPortOk() (*int32, bool) {
	if o == nil || IsNil(o.GrpcPort) {
		return nil, false
	}
	return o.GrpcPort, true
}

// HasGrpcPort returns a boolean if a field has been set.
func (o *Instance) HasGrpcPort() bool {
	if o != nil && !IsNil(o.GrpcPort) {
		return true
	}

	return false
}

// SetGrpcPort gets a reference to the given int32 and assigns it to the GrpcPort field.
func (o *Instance) SetGrpcPort(v int32) {
	o.GrpcPort = &v
}

// GetAdminPort returns the AdminPort field value if set, zero value otherwise.
func (o *Instance) GetAdminPort() int32 {
	if o == nil || IsNil(o.AdminPort) {
		var ret int32
		return ret
	}
	return *o.AdminPort
}

// GetAdminPortOk returns a tuple with the AdminPort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Instance) GetAdminPortOk() (*int32, bool) {
	if o == nil || IsNil(o.AdminPort) {
		return nil, false
	}
	return o.AdminPort, true
}

// HasAdminPort returns a boolean if a field has been set.
func (o *Instance) HasAdminPort() bool {
	if o != nil && !IsNil(o.AdminPort) {
		return true
	}

	return false
}

// SetAdminPort gets a reference to the given int32 and assigns it to the AdminPort field.
func (o *Instance) SetAdminPort(v int32) {
	o.AdminPort = &v
}

// GetQueryServicePort returns the QueryServicePort field value if set, zero value otherwise.
func (o *Instance) GetQueryServicePort() int32 {
	if o == nil || IsNil(o.QueryServicePort) {
		var ret int32
		return ret
	}
	return *o.QueryServicePort
}

// GetQueryServicePortOk returns a tuple with the QueryServicePort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Instance) GetQueryServicePortOk() (*int32, bool) {
	if o == nil || IsNil(o.QueryServicePort) {
		return nil, false
	}
	return o.QueryServicePort, true
}

// HasQueryServicePort returns a boolean if a field has been set.
func (o *Instance) HasQueryServicePort() bool {
	if o != nil && !IsNil(o.QueryServicePort) {
		return true
	}

	return false
}

// SetQueryServicePort gets a reference to the given int32 and assigns it to the QueryServicePort field.
func (o *Instance) SetQueryServicePort(v int32) {
	o.QueryServicePort = &v
}

// GetQueryMailboxPort returns the QueryMailboxPort field value if set, zero value otherwise.
func (o *Instance) GetQueryMailboxPort() int32 {
	if o == nil || IsNil(o.QueryMailboxPort) {
		var ret int32
		return ret
	}
	return *o.QueryMailboxPort
}

// GetQueryMailboxPortOk returns a tuple with the QueryMailboxPort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Instance) GetQueryMailboxPortOk() (*int32, bool) {
	if o == nil || IsNil(o.QueryMailboxPort) {
		return nil, false
	}
	return o.QueryMailboxPort, true
}

// HasQueryMailboxPort returns a boolean if a field has been set.
func (o *Instance) HasQueryMailboxPort() bool {
	if o != nil && !IsNil(o.QueryMailboxPort) {
		return true
	}

	return false
}

// SetQueryMailboxPort gets a reference to the given int32 and assigns it to the QueryMailboxPort field.
func (o *Instance) SetQueryMailboxPort(v int32) {
	o.QueryMailboxPort = &v
}

// GetQueriesDisabled returns the QueriesDisabled field value if set, zero value otherwise.
func (o *Instance) GetQueriesDisabled() bool {
	if o == nil || IsNil(o.QueriesDisabled) {
		var ret bool
		return ret
	}
	return *o.QueriesDisabled
}

// GetQueriesDisabledOk returns a tuple with the QueriesDisabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Instance) GetQueriesDisabledOk() (*bool, bool) {
	if o == nil || IsNil(o.QueriesDisabled) {
		return nil, false
	}
	return o.QueriesDisabled, true
}

// HasQueriesDisabled returns a boolean if a field has been set.
func (o *Instance) HasQueriesDisabled() bool {
	if o != nil && !IsNil(o.QueriesDisabled) {
		return true
	}

	return false
}

// SetQueriesDisabled gets a reference to the given bool and assigns it to the QueriesDisabled field.
func (o *Instance) SetQueriesDisabled(v bool) {
	o.QueriesDisabled = &v
}

func (o Instance) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Instance) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	// skip: host is readOnly
	// skip: port is readOnly
	// skip: type is readOnly
	// skip: tags is readOnly
	// skip: pools is readOnly
	// skip: grpcPort is readOnly
	// skip: adminPort is readOnly
	// skip: queryServicePort is readOnly
	// skip: queryMailboxPort is readOnly
	// skip: queriesDisabled is readOnly
	return toSerialize, nil
}

type NullableInstance struct {
	value *Instance
	isSet bool
}

func (v NullableInstance) Get() *Instance {
	return v.value
}

func (v *NullableInstance) Set(val *Instance) {
	v.value = val
	v.isSet = true
}

func (v NullableInstance) IsSet() bool {
	return v.isSet
}

func (v *NullableInstance) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInstance(val *Instance) *NullableInstance {
	return &NullableInstance{value: val, isSet: true}
}

func (v NullableInstance) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInstance) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


