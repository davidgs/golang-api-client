/*
Pinot Controller API

APIs for accessing Pinot Controller information

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ClusterHealthResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ClusterHealthResponse{}

// ClusterHealthResponse struct for ClusterHealthResponse
type ClusterHealthResponse struct {
	UnhealthyServerCount *int64 `json:"unhealthyServerCount,omitempty"`
	TableToMisconfiguredSegmentCount *map[string]int32 `json:"tableToMisconfiguredSegmentCount,omitempty"`
	TableToErrorSegmentsCount *map[string]int32 `json:"tableToErrorSegmentsCount,omitempty"`
	TableToSegmentsWitHMissingColumnsCount *map[string]int32 `json:"tableToSegmentsWitHMissingColumnsCount,omitempty"`
}

// NewClusterHealthResponse instantiates a new ClusterHealthResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClusterHealthResponse() *ClusterHealthResponse {
	this := ClusterHealthResponse{}
	return &this
}

// NewClusterHealthResponseWithDefaults instantiates a new ClusterHealthResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClusterHealthResponseWithDefaults() *ClusterHealthResponse {
	this := ClusterHealthResponse{}
	return &this
}

// GetUnhealthyServerCount returns the UnhealthyServerCount field value if set, zero value otherwise.
func (o *ClusterHealthResponse) GetUnhealthyServerCount() int64 {
	if o == nil || IsNil(o.UnhealthyServerCount) {
		var ret int64
		return ret
	}
	return *o.UnhealthyServerCount
}

// GetUnhealthyServerCountOk returns a tuple with the UnhealthyServerCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterHealthResponse) GetUnhealthyServerCountOk() (*int64, bool) {
	if o == nil || IsNil(o.UnhealthyServerCount) {
		return nil, false
	}
	return o.UnhealthyServerCount, true
}

// HasUnhealthyServerCount returns a boolean if a field has been set.
func (o *ClusterHealthResponse) HasUnhealthyServerCount() bool {
	if o != nil && !IsNil(o.UnhealthyServerCount) {
		return true
	}

	return false
}

// SetUnhealthyServerCount gets a reference to the given int64 and assigns it to the UnhealthyServerCount field.
func (o *ClusterHealthResponse) SetUnhealthyServerCount(v int64) {
	o.UnhealthyServerCount = &v
}

// GetTableToMisconfiguredSegmentCount returns the TableToMisconfiguredSegmentCount field value if set, zero value otherwise.
func (o *ClusterHealthResponse) GetTableToMisconfiguredSegmentCount() map[string]int32 {
	if o == nil || IsNil(o.TableToMisconfiguredSegmentCount) {
		var ret map[string]int32
		return ret
	}
	return *o.TableToMisconfiguredSegmentCount
}

// GetTableToMisconfiguredSegmentCountOk returns a tuple with the TableToMisconfiguredSegmentCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterHealthResponse) GetTableToMisconfiguredSegmentCountOk() (*map[string]int32, bool) {
	if o == nil || IsNil(o.TableToMisconfiguredSegmentCount) {
		return nil, false
	}
	return o.TableToMisconfiguredSegmentCount, true
}

// HasTableToMisconfiguredSegmentCount returns a boolean if a field has been set.
func (o *ClusterHealthResponse) HasTableToMisconfiguredSegmentCount() bool {
	if o != nil && !IsNil(o.TableToMisconfiguredSegmentCount) {
		return true
	}

	return false
}

// SetTableToMisconfiguredSegmentCount gets a reference to the given map[string]int32 and assigns it to the TableToMisconfiguredSegmentCount field.
func (o *ClusterHealthResponse) SetTableToMisconfiguredSegmentCount(v map[string]int32) {
	o.TableToMisconfiguredSegmentCount = &v
}

// GetTableToErrorSegmentsCount returns the TableToErrorSegmentsCount field value if set, zero value otherwise.
func (o *ClusterHealthResponse) GetTableToErrorSegmentsCount() map[string]int32 {
	if o == nil || IsNil(o.TableToErrorSegmentsCount) {
		var ret map[string]int32
		return ret
	}
	return *o.TableToErrorSegmentsCount
}

// GetTableToErrorSegmentsCountOk returns a tuple with the TableToErrorSegmentsCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterHealthResponse) GetTableToErrorSegmentsCountOk() (*map[string]int32, bool) {
	if o == nil || IsNil(o.TableToErrorSegmentsCount) {
		return nil, false
	}
	return o.TableToErrorSegmentsCount, true
}

// HasTableToErrorSegmentsCount returns a boolean if a field has been set.
func (o *ClusterHealthResponse) HasTableToErrorSegmentsCount() bool {
	if o != nil && !IsNil(o.TableToErrorSegmentsCount) {
		return true
	}

	return false
}

// SetTableToErrorSegmentsCount gets a reference to the given map[string]int32 and assigns it to the TableToErrorSegmentsCount field.
func (o *ClusterHealthResponse) SetTableToErrorSegmentsCount(v map[string]int32) {
	o.TableToErrorSegmentsCount = &v
}

// GetTableToSegmentsWitHMissingColumnsCount returns the TableToSegmentsWitHMissingColumnsCount field value if set, zero value otherwise.
func (o *ClusterHealthResponse) GetTableToSegmentsWitHMissingColumnsCount() map[string]int32 {
	if o == nil || IsNil(o.TableToSegmentsWitHMissingColumnsCount) {
		var ret map[string]int32
		return ret
	}
	return *o.TableToSegmentsWitHMissingColumnsCount
}

// GetTableToSegmentsWitHMissingColumnsCountOk returns a tuple with the TableToSegmentsWitHMissingColumnsCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterHealthResponse) GetTableToSegmentsWitHMissingColumnsCountOk() (*map[string]int32, bool) {
	if o == nil || IsNil(o.TableToSegmentsWitHMissingColumnsCount) {
		return nil, false
	}
	return o.TableToSegmentsWitHMissingColumnsCount, true
}

// HasTableToSegmentsWitHMissingColumnsCount returns a boolean if a field has been set.
func (o *ClusterHealthResponse) HasTableToSegmentsWitHMissingColumnsCount() bool {
	if o != nil && !IsNil(o.TableToSegmentsWitHMissingColumnsCount) {
		return true
	}

	return false
}

// SetTableToSegmentsWitHMissingColumnsCount gets a reference to the given map[string]int32 and assigns it to the TableToSegmentsWitHMissingColumnsCount field.
func (o *ClusterHealthResponse) SetTableToSegmentsWitHMissingColumnsCount(v map[string]int32) {
	o.TableToSegmentsWitHMissingColumnsCount = &v
}

func (o ClusterHealthResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ClusterHealthResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.UnhealthyServerCount) {
		toSerialize["unhealthyServerCount"] = o.UnhealthyServerCount
	}
	if !IsNil(o.TableToMisconfiguredSegmentCount) {
		toSerialize["tableToMisconfiguredSegmentCount"] = o.TableToMisconfiguredSegmentCount
	}
	if !IsNil(o.TableToErrorSegmentsCount) {
		toSerialize["tableToErrorSegmentsCount"] = o.TableToErrorSegmentsCount
	}
	if !IsNil(o.TableToSegmentsWitHMissingColumnsCount) {
		toSerialize["tableToSegmentsWitHMissingColumnsCount"] = o.TableToSegmentsWitHMissingColumnsCount
	}
	return toSerialize, nil
}

type NullableClusterHealthResponse struct {
	value *ClusterHealthResponse
	isSet bool
}

func (v NullableClusterHealthResponse) Get() *ClusterHealthResponse {
	return v.value
}

func (v *NullableClusterHealthResponse) Set(val *ClusterHealthResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableClusterHealthResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableClusterHealthResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClusterHealthResponse(val *ClusterHealthResponse) *NullableClusterHealthResponse {
	return &NullableClusterHealthResponse{value: val, isSet: true}
}

func (v NullableClusterHealthResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClusterHealthResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


