/*
Pinot Controller API

APIs for accessing Pinot Controller information

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ReplicaGroupStrategyConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ReplicaGroupStrategyConfig{}

// ReplicaGroupStrategyConfig struct for ReplicaGroupStrategyConfig
type ReplicaGroupStrategyConfig struct {
	PartitionColumn *string `json:"partitionColumn,omitempty"`
	NumInstancesPerPartition int32 `json:"numInstancesPerPartition"`
}

// NewReplicaGroupStrategyConfig instantiates a new ReplicaGroupStrategyConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReplicaGroupStrategyConfig(numInstancesPerPartition int32) *ReplicaGroupStrategyConfig {
	this := ReplicaGroupStrategyConfig{}
	this.NumInstancesPerPartition = numInstancesPerPartition
	return &this
}

// NewReplicaGroupStrategyConfigWithDefaults instantiates a new ReplicaGroupStrategyConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReplicaGroupStrategyConfigWithDefaults() *ReplicaGroupStrategyConfig {
	this := ReplicaGroupStrategyConfig{}
	return &this
}

// GetPartitionColumn returns the PartitionColumn field value if set, zero value otherwise.
func (o *ReplicaGroupStrategyConfig) GetPartitionColumn() string {
	if o == nil || IsNil(o.PartitionColumn) {
		var ret string
		return ret
	}
	return *o.PartitionColumn
}

// GetPartitionColumnOk returns a tuple with the PartitionColumn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReplicaGroupStrategyConfig) GetPartitionColumnOk() (*string, bool) {
	if o == nil || IsNil(o.PartitionColumn) {
		return nil, false
	}
	return o.PartitionColumn, true
}

// HasPartitionColumn returns a boolean if a field has been set.
func (o *ReplicaGroupStrategyConfig) HasPartitionColumn() bool {
	if o != nil && !IsNil(o.PartitionColumn) {
		return true
	}

	return false
}

// SetPartitionColumn gets a reference to the given string and assigns it to the PartitionColumn field.
func (o *ReplicaGroupStrategyConfig) SetPartitionColumn(v string) {
	o.PartitionColumn = &v
}

// GetNumInstancesPerPartition returns the NumInstancesPerPartition field value
func (o *ReplicaGroupStrategyConfig) GetNumInstancesPerPartition() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.NumInstancesPerPartition
}

// GetNumInstancesPerPartitionOk returns a tuple with the NumInstancesPerPartition field value
// and a boolean to check if the value has been set.
func (o *ReplicaGroupStrategyConfig) GetNumInstancesPerPartitionOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NumInstancesPerPartition, true
}

// SetNumInstancesPerPartition sets field value
func (o *ReplicaGroupStrategyConfig) SetNumInstancesPerPartition(v int32) {
	o.NumInstancesPerPartition = v
}

func (o ReplicaGroupStrategyConfig) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ReplicaGroupStrategyConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	// skip: partitionColumn is readOnly
	// skip: numInstancesPerPartition is readOnly
	return toSerialize, nil
}

type NullableReplicaGroupStrategyConfig struct {
	value *ReplicaGroupStrategyConfig
	isSet bool
}

func (v NullableReplicaGroupStrategyConfig) Get() *ReplicaGroupStrategyConfig {
	return v.value
}

func (v *NullableReplicaGroupStrategyConfig) Set(val *ReplicaGroupStrategyConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableReplicaGroupStrategyConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableReplicaGroupStrategyConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReplicaGroupStrategyConfig(val *ReplicaGroupStrategyConfig) *NullableReplicaGroupStrategyConfig {
	return &NullableReplicaGroupStrategyConfig{value: val, isSet: true}
}

func (v NullableReplicaGroupStrategyConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReplicaGroupStrategyConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


