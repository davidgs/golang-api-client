/*
Pinot Controller API

APIs for accessing Pinot Controller information

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the InstanceAssignmentConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InstanceAssignmentConfig{}

// InstanceAssignmentConfig struct for InstanceAssignmentConfig
type InstanceAssignmentConfig struct {
	TagPoolConfig InstanceTagPoolConfig `json:"tagPoolConfig"`
	ConstraintConfig *InstanceConstraintConfig `json:"constraintConfig,omitempty"`
	ReplicaGroupPartitionConfig InstanceReplicaGroupPartitionConfig `json:"replicaGroupPartitionConfig"`
	PartitionSelector *string `json:"partitionSelector,omitempty"`
}

// NewInstanceAssignmentConfig instantiates a new InstanceAssignmentConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInstanceAssignmentConfig(tagPoolConfig InstanceTagPoolConfig, replicaGroupPartitionConfig InstanceReplicaGroupPartitionConfig) *InstanceAssignmentConfig {
	this := InstanceAssignmentConfig{}
	this.TagPoolConfig = tagPoolConfig
	this.ReplicaGroupPartitionConfig = replicaGroupPartitionConfig
	return &this
}

// NewInstanceAssignmentConfigWithDefaults instantiates a new InstanceAssignmentConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInstanceAssignmentConfigWithDefaults() *InstanceAssignmentConfig {
	this := InstanceAssignmentConfig{}
	return &this
}

// GetTagPoolConfig returns the TagPoolConfig field value
func (o *InstanceAssignmentConfig) GetTagPoolConfig() InstanceTagPoolConfig {
	if o == nil {
		var ret InstanceTagPoolConfig
		return ret
	}

	return o.TagPoolConfig
}

// GetTagPoolConfigOk returns a tuple with the TagPoolConfig field value
// and a boolean to check if the value has been set.
func (o *InstanceAssignmentConfig) GetTagPoolConfigOk() (*InstanceTagPoolConfig, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TagPoolConfig, true
}

// SetTagPoolConfig sets field value
func (o *InstanceAssignmentConfig) SetTagPoolConfig(v InstanceTagPoolConfig) {
	o.TagPoolConfig = v
}

// GetConstraintConfig returns the ConstraintConfig field value if set, zero value otherwise.
func (o *InstanceAssignmentConfig) GetConstraintConfig() InstanceConstraintConfig {
	if o == nil || IsNil(o.ConstraintConfig) {
		var ret InstanceConstraintConfig
		return ret
	}
	return *o.ConstraintConfig
}

// GetConstraintConfigOk returns a tuple with the ConstraintConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceAssignmentConfig) GetConstraintConfigOk() (*InstanceConstraintConfig, bool) {
	if o == nil || IsNil(o.ConstraintConfig) {
		return nil, false
	}
	return o.ConstraintConfig, true
}

// HasConstraintConfig returns a boolean if a field has been set.
func (o *InstanceAssignmentConfig) HasConstraintConfig() bool {
	if o != nil && !IsNil(o.ConstraintConfig) {
		return true
	}

	return false
}

// SetConstraintConfig gets a reference to the given InstanceConstraintConfig and assigns it to the ConstraintConfig field.
func (o *InstanceAssignmentConfig) SetConstraintConfig(v InstanceConstraintConfig) {
	o.ConstraintConfig = &v
}

// GetReplicaGroupPartitionConfig returns the ReplicaGroupPartitionConfig field value
func (o *InstanceAssignmentConfig) GetReplicaGroupPartitionConfig() InstanceReplicaGroupPartitionConfig {
	if o == nil {
		var ret InstanceReplicaGroupPartitionConfig
		return ret
	}

	return o.ReplicaGroupPartitionConfig
}

// GetReplicaGroupPartitionConfigOk returns a tuple with the ReplicaGroupPartitionConfig field value
// and a boolean to check if the value has been set.
func (o *InstanceAssignmentConfig) GetReplicaGroupPartitionConfigOk() (*InstanceReplicaGroupPartitionConfig, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ReplicaGroupPartitionConfig, true
}

// SetReplicaGroupPartitionConfig sets field value
func (o *InstanceAssignmentConfig) SetReplicaGroupPartitionConfig(v InstanceReplicaGroupPartitionConfig) {
	o.ReplicaGroupPartitionConfig = v
}

// GetPartitionSelector returns the PartitionSelector field value if set, zero value otherwise.
func (o *InstanceAssignmentConfig) GetPartitionSelector() string {
	if o == nil || IsNil(o.PartitionSelector) {
		var ret string
		return ret
	}
	return *o.PartitionSelector
}

// GetPartitionSelectorOk returns a tuple with the PartitionSelector field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceAssignmentConfig) GetPartitionSelectorOk() (*string, bool) {
	if o == nil || IsNil(o.PartitionSelector) {
		return nil, false
	}
	return o.PartitionSelector, true
}

// HasPartitionSelector returns a boolean if a field has been set.
func (o *InstanceAssignmentConfig) HasPartitionSelector() bool {
	if o != nil && !IsNil(o.PartitionSelector) {
		return true
	}

	return false
}

// SetPartitionSelector gets a reference to the given string and assigns it to the PartitionSelector field.
func (o *InstanceAssignmentConfig) SetPartitionSelector(v string) {
	o.PartitionSelector = &v
}

func (o InstanceAssignmentConfig) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InstanceAssignmentConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["tagPoolConfig"] = o.TagPoolConfig
	if !IsNil(o.ConstraintConfig) {
		toSerialize["constraintConfig"] = o.ConstraintConfig
	}
	toSerialize["replicaGroupPartitionConfig"] = o.ReplicaGroupPartitionConfig
	// skip: partitionSelector is readOnly
	return toSerialize, nil
}

type NullableInstanceAssignmentConfig struct {
	value *InstanceAssignmentConfig
	isSet bool
}

func (v NullableInstanceAssignmentConfig) Get() *InstanceAssignmentConfig {
	return v.value
}

func (v *NullableInstanceAssignmentConfig) Set(val *InstanceAssignmentConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableInstanceAssignmentConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableInstanceAssignmentConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInstanceAssignmentConfig(val *InstanceAssignmentConfig) *NullableInstanceAssignmentConfig {
	return &NullableInstanceAssignmentConfig{value: val, isSet: true}
}

func (v NullableInstanceAssignmentConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInstanceAssignmentConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


