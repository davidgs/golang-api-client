/*
Pinot Controller API

APIs for accessing Pinot Controller information

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the InstanceTagPoolConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InstanceTagPoolConfig{}

// InstanceTagPoolConfig struct for InstanceTagPoolConfig
type InstanceTagPoolConfig struct {
	Tag string `json:"tag"`
	PoolBased *bool `json:"poolBased,omitempty"`
	NumPools *int32 `json:"numPools,omitempty"`
	Pools []int32 `json:"pools,omitempty"`
}

// NewInstanceTagPoolConfig instantiates a new InstanceTagPoolConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInstanceTagPoolConfig(tag string) *InstanceTagPoolConfig {
	this := InstanceTagPoolConfig{}
	this.Tag = tag
	return &this
}

// NewInstanceTagPoolConfigWithDefaults instantiates a new InstanceTagPoolConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInstanceTagPoolConfigWithDefaults() *InstanceTagPoolConfig {
	this := InstanceTagPoolConfig{}
	return &this
}

// GetTag returns the Tag field value
func (o *InstanceTagPoolConfig) GetTag() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Tag
}

// GetTagOk returns a tuple with the Tag field value
// and a boolean to check if the value has been set.
func (o *InstanceTagPoolConfig) GetTagOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Tag, true
}

// SetTag sets field value
func (o *InstanceTagPoolConfig) SetTag(v string) {
	o.Tag = v
}

// GetPoolBased returns the PoolBased field value if set, zero value otherwise.
func (o *InstanceTagPoolConfig) GetPoolBased() bool {
	if o == nil || IsNil(o.PoolBased) {
		var ret bool
		return ret
	}
	return *o.PoolBased
}

// GetPoolBasedOk returns a tuple with the PoolBased field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceTagPoolConfig) GetPoolBasedOk() (*bool, bool) {
	if o == nil || IsNil(o.PoolBased) {
		return nil, false
	}
	return o.PoolBased, true
}

// HasPoolBased returns a boolean if a field has been set.
func (o *InstanceTagPoolConfig) HasPoolBased() bool {
	if o != nil && !IsNil(o.PoolBased) {
		return true
	}

	return false
}

// SetPoolBased gets a reference to the given bool and assigns it to the PoolBased field.
func (o *InstanceTagPoolConfig) SetPoolBased(v bool) {
	o.PoolBased = &v
}

// GetNumPools returns the NumPools field value if set, zero value otherwise.
func (o *InstanceTagPoolConfig) GetNumPools() int32 {
	if o == nil || IsNil(o.NumPools) {
		var ret int32
		return ret
	}
	return *o.NumPools
}

// GetNumPoolsOk returns a tuple with the NumPools field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceTagPoolConfig) GetNumPoolsOk() (*int32, bool) {
	if o == nil || IsNil(o.NumPools) {
		return nil, false
	}
	return o.NumPools, true
}

// HasNumPools returns a boolean if a field has been set.
func (o *InstanceTagPoolConfig) HasNumPools() bool {
	if o != nil && !IsNil(o.NumPools) {
		return true
	}

	return false
}

// SetNumPools gets a reference to the given int32 and assigns it to the NumPools field.
func (o *InstanceTagPoolConfig) SetNumPools(v int32) {
	o.NumPools = &v
}

// GetPools returns the Pools field value if set, zero value otherwise.
func (o *InstanceTagPoolConfig) GetPools() []int32 {
	if o == nil || IsNil(o.Pools) {
		var ret []int32
		return ret
	}
	return o.Pools
}

// GetPoolsOk returns a tuple with the Pools field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceTagPoolConfig) GetPoolsOk() ([]int32, bool) {
	if o == nil || IsNil(o.Pools) {
		return nil, false
	}
	return o.Pools, true
}

// HasPools returns a boolean if a field has been set.
func (o *InstanceTagPoolConfig) HasPools() bool {
	if o != nil && !IsNil(o.Pools) {
		return true
	}

	return false
}

// SetPools gets a reference to the given []int32 and assigns it to the Pools field.
func (o *InstanceTagPoolConfig) SetPools(v []int32) {
	o.Pools = v
}

func (o InstanceTagPoolConfig) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InstanceTagPoolConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	// skip: tag is readOnly
	// skip: poolBased is readOnly
	// skip: numPools is readOnly
	// skip: pools is readOnly
	return toSerialize, nil
}

type NullableInstanceTagPoolConfig struct {
	value *InstanceTagPoolConfig
	isSet bool
}

func (v NullableInstanceTagPoolConfig) Get() *InstanceTagPoolConfig {
	return v.value
}

func (v *NullableInstanceTagPoolConfig) Set(val *InstanceTagPoolConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableInstanceTagPoolConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableInstanceTagPoolConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInstanceTagPoolConfig(val *InstanceTagPoolConfig) *NullableInstanceTagPoolConfig {
	return &NullableInstanceTagPoolConfig{value: val, isSet: true}
}

func (v NullableInstanceTagPoolConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInstanceTagPoolConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


