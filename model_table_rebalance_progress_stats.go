/*
Pinot Controller API

APIs for accessing Pinot Controller information

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the TableRebalanceProgressStats type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TableRebalanceProgressStats{}

// TableRebalanceProgressStats struct for TableRebalanceProgressStats
type TableRebalanceProgressStats struct {
	Status *string `json:"status,omitempty"`
	StartTimeMs *int64 `json:"startTimeMs,omitempty"`
	InitialToTargetStateConvergence *RebalanceStateStats `json:"initialToTargetStateConvergence,omitempty"`
	TimeToFinishInSeconds *int64 `json:"timeToFinishInSeconds,omitempty"`
	ExternalViewToIdealStateConvergence *RebalanceStateStats `json:"externalViewToIdealStateConvergence,omitempty"`
	CurrentToTargetConvergence *RebalanceStateStats `json:"currentToTargetConvergence,omitempty"`
	CompletionStatusMsg *string `json:"completionStatusMsg,omitempty"`
}

// NewTableRebalanceProgressStats instantiates a new TableRebalanceProgressStats object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTableRebalanceProgressStats() *TableRebalanceProgressStats {
	this := TableRebalanceProgressStats{}
	return &this
}

// NewTableRebalanceProgressStatsWithDefaults instantiates a new TableRebalanceProgressStats object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTableRebalanceProgressStatsWithDefaults() *TableRebalanceProgressStats {
	this := TableRebalanceProgressStats{}
	return &this
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *TableRebalanceProgressStats) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TableRebalanceProgressStats) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *TableRebalanceProgressStats) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *TableRebalanceProgressStats) SetStatus(v string) {
	o.Status = &v
}

// GetStartTimeMs returns the StartTimeMs field value if set, zero value otherwise.
func (o *TableRebalanceProgressStats) GetStartTimeMs() int64 {
	if o == nil || IsNil(o.StartTimeMs) {
		var ret int64
		return ret
	}
	return *o.StartTimeMs
}

// GetStartTimeMsOk returns a tuple with the StartTimeMs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TableRebalanceProgressStats) GetStartTimeMsOk() (*int64, bool) {
	if o == nil || IsNil(o.StartTimeMs) {
		return nil, false
	}
	return o.StartTimeMs, true
}

// HasStartTimeMs returns a boolean if a field has been set.
func (o *TableRebalanceProgressStats) HasStartTimeMs() bool {
	if o != nil && !IsNil(o.StartTimeMs) {
		return true
	}

	return false
}

// SetStartTimeMs gets a reference to the given int64 and assigns it to the StartTimeMs field.
func (o *TableRebalanceProgressStats) SetStartTimeMs(v int64) {
	o.StartTimeMs = &v
}

// GetInitialToTargetStateConvergence returns the InitialToTargetStateConvergence field value if set, zero value otherwise.
func (o *TableRebalanceProgressStats) GetInitialToTargetStateConvergence() RebalanceStateStats {
	if o == nil || IsNil(o.InitialToTargetStateConvergence) {
		var ret RebalanceStateStats
		return ret
	}
	return *o.InitialToTargetStateConvergence
}

// GetInitialToTargetStateConvergenceOk returns a tuple with the InitialToTargetStateConvergence field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TableRebalanceProgressStats) GetInitialToTargetStateConvergenceOk() (*RebalanceStateStats, bool) {
	if o == nil || IsNil(o.InitialToTargetStateConvergence) {
		return nil, false
	}
	return o.InitialToTargetStateConvergence, true
}

// HasInitialToTargetStateConvergence returns a boolean if a field has been set.
func (o *TableRebalanceProgressStats) HasInitialToTargetStateConvergence() bool {
	if o != nil && !IsNil(o.InitialToTargetStateConvergence) {
		return true
	}

	return false
}

// SetInitialToTargetStateConvergence gets a reference to the given RebalanceStateStats and assigns it to the InitialToTargetStateConvergence field.
func (o *TableRebalanceProgressStats) SetInitialToTargetStateConvergence(v RebalanceStateStats) {
	o.InitialToTargetStateConvergence = &v
}

// GetTimeToFinishInSeconds returns the TimeToFinishInSeconds field value if set, zero value otherwise.
func (o *TableRebalanceProgressStats) GetTimeToFinishInSeconds() int64 {
	if o == nil || IsNil(o.TimeToFinishInSeconds) {
		var ret int64
		return ret
	}
	return *o.TimeToFinishInSeconds
}

// GetTimeToFinishInSecondsOk returns a tuple with the TimeToFinishInSeconds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TableRebalanceProgressStats) GetTimeToFinishInSecondsOk() (*int64, bool) {
	if o == nil || IsNil(o.TimeToFinishInSeconds) {
		return nil, false
	}
	return o.TimeToFinishInSeconds, true
}

// HasTimeToFinishInSeconds returns a boolean if a field has been set.
func (o *TableRebalanceProgressStats) HasTimeToFinishInSeconds() bool {
	if o != nil && !IsNil(o.TimeToFinishInSeconds) {
		return true
	}

	return false
}

// SetTimeToFinishInSeconds gets a reference to the given int64 and assigns it to the TimeToFinishInSeconds field.
func (o *TableRebalanceProgressStats) SetTimeToFinishInSeconds(v int64) {
	o.TimeToFinishInSeconds = &v
}

// GetExternalViewToIdealStateConvergence returns the ExternalViewToIdealStateConvergence field value if set, zero value otherwise.
func (o *TableRebalanceProgressStats) GetExternalViewToIdealStateConvergence() RebalanceStateStats {
	if o == nil || IsNil(o.ExternalViewToIdealStateConvergence) {
		var ret RebalanceStateStats
		return ret
	}
	return *o.ExternalViewToIdealStateConvergence
}

// GetExternalViewToIdealStateConvergenceOk returns a tuple with the ExternalViewToIdealStateConvergence field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TableRebalanceProgressStats) GetExternalViewToIdealStateConvergenceOk() (*RebalanceStateStats, bool) {
	if o == nil || IsNil(o.ExternalViewToIdealStateConvergence) {
		return nil, false
	}
	return o.ExternalViewToIdealStateConvergence, true
}

// HasExternalViewToIdealStateConvergence returns a boolean if a field has been set.
func (o *TableRebalanceProgressStats) HasExternalViewToIdealStateConvergence() bool {
	if o != nil && !IsNil(o.ExternalViewToIdealStateConvergence) {
		return true
	}

	return false
}

// SetExternalViewToIdealStateConvergence gets a reference to the given RebalanceStateStats and assigns it to the ExternalViewToIdealStateConvergence field.
func (o *TableRebalanceProgressStats) SetExternalViewToIdealStateConvergence(v RebalanceStateStats) {
	o.ExternalViewToIdealStateConvergence = &v
}

// GetCurrentToTargetConvergence returns the CurrentToTargetConvergence field value if set, zero value otherwise.
func (o *TableRebalanceProgressStats) GetCurrentToTargetConvergence() RebalanceStateStats {
	if o == nil || IsNil(o.CurrentToTargetConvergence) {
		var ret RebalanceStateStats
		return ret
	}
	return *o.CurrentToTargetConvergence
}

// GetCurrentToTargetConvergenceOk returns a tuple with the CurrentToTargetConvergence field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TableRebalanceProgressStats) GetCurrentToTargetConvergenceOk() (*RebalanceStateStats, bool) {
	if o == nil || IsNil(o.CurrentToTargetConvergence) {
		return nil, false
	}
	return o.CurrentToTargetConvergence, true
}

// HasCurrentToTargetConvergence returns a boolean if a field has been set.
func (o *TableRebalanceProgressStats) HasCurrentToTargetConvergence() bool {
	if o != nil && !IsNil(o.CurrentToTargetConvergence) {
		return true
	}

	return false
}

// SetCurrentToTargetConvergence gets a reference to the given RebalanceStateStats and assigns it to the CurrentToTargetConvergence field.
func (o *TableRebalanceProgressStats) SetCurrentToTargetConvergence(v RebalanceStateStats) {
	o.CurrentToTargetConvergence = &v
}

// GetCompletionStatusMsg returns the CompletionStatusMsg field value if set, zero value otherwise.
func (o *TableRebalanceProgressStats) GetCompletionStatusMsg() string {
	if o == nil || IsNil(o.CompletionStatusMsg) {
		var ret string
		return ret
	}
	return *o.CompletionStatusMsg
}

// GetCompletionStatusMsgOk returns a tuple with the CompletionStatusMsg field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TableRebalanceProgressStats) GetCompletionStatusMsgOk() (*string, bool) {
	if o == nil || IsNil(o.CompletionStatusMsg) {
		return nil, false
	}
	return o.CompletionStatusMsg, true
}

// HasCompletionStatusMsg returns a boolean if a field has been set.
func (o *TableRebalanceProgressStats) HasCompletionStatusMsg() bool {
	if o != nil && !IsNil(o.CompletionStatusMsg) {
		return true
	}

	return false
}

// SetCompletionStatusMsg gets a reference to the given string and assigns it to the CompletionStatusMsg field.
func (o *TableRebalanceProgressStats) SetCompletionStatusMsg(v string) {
	o.CompletionStatusMsg = &v
}

func (o TableRebalanceProgressStats) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TableRebalanceProgressStats) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.StartTimeMs) {
		toSerialize["startTimeMs"] = o.StartTimeMs
	}
	if !IsNil(o.InitialToTargetStateConvergence) {
		toSerialize["initialToTargetStateConvergence"] = o.InitialToTargetStateConvergence
	}
	if !IsNil(o.TimeToFinishInSeconds) {
		toSerialize["timeToFinishInSeconds"] = o.TimeToFinishInSeconds
	}
	if !IsNil(o.ExternalViewToIdealStateConvergence) {
		toSerialize["externalViewToIdealStateConvergence"] = o.ExternalViewToIdealStateConvergence
	}
	if !IsNil(o.CurrentToTargetConvergence) {
		toSerialize["currentToTargetConvergence"] = o.CurrentToTargetConvergence
	}
	if !IsNil(o.CompletionStatusMsg) {
		toSerialize["completionStatusMsg"] = o.CompletionStatusMsg
	}
	return toSerialize, nil
}

type NullableTableRebalanceProgressStats struct {
	value *TableRebalanceProgressStats
	isSet bool
}

func (v NullableTableRebalanceProgressStats) Get() *TableRebalanceProgressStats {
	return v.value
}

func (v *NullableTableRebalanceProgressStats) Set(val *TableRebalanceProgressStats) {
	v.value = val
	v.isSet = true
}

func (v NullableTableRebalanceProgressStats) IsSet() bool {
	return v.isSet
}

func (v *NullableTableRebalanceProgressStats) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTableRebalanceProgressStats(val *TableRebalanceProgressStats) *NullableTableRebalanceProgressStats {
	return &NullableTableRebalanceProgressStats{value: val, isSet: true}
}

func (v NullableTableRebalanceProgressStats) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTableRebalanceProgressStats) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


