/*
Pinot Controller API

APIs for accessing Pinot Controller information

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ConsumingSegmentInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ConsumingSegmentInfo{}

// ConsumingSegmentInfo struct for ConsumingSegmentInfo
type ConsumingSegmentInfo struct {
	ServerName *string `json:"serverName,omitempty"`
	ConsumerState *string `json:"consumerState,omitempty"`
	LastConsumedTimestamp *int64 `json:"lastConsumedTimestamp,omitempty"`
	PartitionToOffsetMap *map[string]string `json:"partitionToOffsetMap,omitempty"`
	PartitionOffsetInfo *PartitionOffsetInfo `json:"partitionOffsetInfo,omitempty"`
}

// NewConsumingSegmentInfo instantiates a new ConsumingSegmentInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConsumingSegmentInfo() *ConsumingSegmentInfo {
	this := ConsumingSegmentInfo{}
	return &this
}

// NewConsumingSegmentInfoWithDefaults instantiates a new ConsumingSegmentInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConsumingSegmentInfoWithDefaults() *ConsumingSegmentInfo {
	this := ConsumingSegmentInfo{}
	return &this
}

// GetServerName returns the ServerName field value if set, zero value otherwise.
func (o *ConsumingSegmentInfo) GetServerName() string {
	if o == nil || IsNil(o.ServerName) {
		var ret string
		return ret
	}
	return *o.ServerName
}

// GetServerNameOk returns a tuple with the ServerName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConsumingSegmentInfo) GetServerNameOk() (*string, bool) {
	if o == nil || IsNil(o.ServerName) {
		return nil, false
	}
	return o.ServerName, true
}

// HasServerName returns a boolean if a field has been set.
func (o *ConsumingSegmentInfo) HasServerName() bool {
	if o != nil && !IsNil(o.ServerName) {
		return true
	}

	return false
}

// SetServerName gets a reference to the given string and assigns it to the ServerName field.
func (o *ConsumingSegmentInfo) SetServerName(v string) {
	o.ServerName = &v
}

// GetConsumerState returns the ConsumerState field value if set, zero value otherwise.
func (o *ConsumingSegmentInfo) GetConsumerState() string {
	if o == nil || IsNil(o.ConsumerState) {
		var ret string
		return ret
	}
	return *o.ConsumerState
}

// GetConsumerStateOk returns a tuple with the ConsumerState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConsumingSegmentInfo) GetConsumerStateOk() (*string, bool) {
	if o == nil || IsNil(o.ConsumerState) {
		return nil, false
	}
	return o.ConsumerState, true
}

// HasConsumerState returns a boolean if a field has been set.
func (o *ConsumingSegmentInfo) HasConsumerState() bool {
	if o != nil && !IsNil(o.ConsumerState) {
		return true
	}

	return false
}

// SetConsumerState gets a reference to the given string and assigns it to the ConsumerState field.
func (o *ConsumingSegmentInfo) SetConsumerState(v string) {
	o.ConsumerState = &v
}

// GetLastConsumedTimestamp returns the LastConsumedTimestamp field value if set, zero value otherwise.
func (o *ConsumingSegmentInfo) GetLastConsumedTimestamp() int64 {
	if o == nil || IsNil(o.LastConsumedTimestamp) {
		var ret int64
		return ret
	}
	return *o.LastConsumedTimestamp
}

// GetLastConsumedTimestampOk returns a tuple with the LastConsumedTimestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConsumingSegmentInfo) GetLastConsumedTimestampOk() (*int64, bool) {
	if o == nil || IsNil(o.LastConsumedTimestamp) {
		return nil, false
	}
	return o.LastConsumedTimestamp, true
}

// HasLastConsumedTimestamp returns a boolean if a field has been set.
func (o *ConsumingSegmentInfo) HasLastConsumedTimestamp() bool {
	if o != nil && !IsNil(o.LastConsumedTimestamp) {
		return true
	}

	return false
}

// SetLastConsumedTimestamp gets a reference to the given int64 and assigns it to the LastConsumedTimestamp field.
func (o *ConsumingSegmentInfo) SetLastConsumedTimestamp(v int64) {
	o.LastConsumedTimestamp = &v
}

// GetPartitionToOffsetMap returns the PartitionToOffsetMap field value if set, zero value otherwise.
func (o *ConsumingSegmentInfo) GetPartitionToOffsetMap() map[string]string {
	if o == nil || IsNil(o.PartitionToOffsetMap) {
		var ret map[string]string
		return ret
	}
	return *o.PartitionToOffsetMap
}

// GetPartitionToOffsetMapOk returns a tuple with the PartitionToOffsetMap field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConsumingSegmentInfo) GetPartitionToOffsetMapOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.PartitionToOffsetMap) {
		return nil, false
	}
	return o.PartitionToOffsetMap, true
}

// HasPartitionToOffsetMap returns a boolean if a field has been set.
func (o *ConsumingSegmentInfo) HasPartitionToOffsetMap() bool {
	if o != nil && !IsNil(o.PartitionToOffsetMap) {
		return true
	}

	return false
}

// SetPartitionToOffsetMap gets a reference to the given map[string]string and assigns it to the PartitionToOffsetMap field.
func (o *ConsumingSegmentInfo) SetPartitionToOffsetMap(v map[string]string) {
	o.PartitionToOffsetMap = &v
}

// GetPartitionOffsetInfo returns the PartitionOffsetInfo field value if set, zero value otherwise.
func (o *ConsumingSegmentInfo) GetPartitionOffsetInfo() PartitionOffsetInfo {
	if o == nil || IsNil(o.PartitionOffsetInfo) {
		var ret PartitionOffsetInfo
		return ret
	}
	return *o.PartitionOffsetInfo
}

// GetPartitionOffsetInfoOk returns a tuple with the PartitionOffsetInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConsumingSegmentInfo) GetPartitionOffsetInfoOk() (*PartitionOffsetInfo, bool) {
	if o == nil || IsNil(o.PartitionOffsetInfo) {
		return nil, false
	}
	return o.PartitionOffsetInfo, true
}

// HasPartitionOffsetInfo returns a boolean if a field has been set.
func (o *ConsumingSegmentInfo) HasPartitionOffsetInfo() bool {
	if o != nil && !IsNil(o.PartitionOffsetInfo) {
		return true
	}

	return false
}

// SetPartitionOffsetInfo gets a reference to the given PartitionOffsetInfo and assigns it to the PartitionOffsetInfo field.
func (o *ConsumingSegmentInfo) SetPartitionOffsetInfo(v PartitionOffsetInfo) {
	o.PartitionOffsetInfo = &v
}

func (o ConsumingSegmentInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ConsumingSegmentInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ServerName) {
		toSerialize["serverName"] = o.ServerName
	}
	if !IsNil(o.ConsumerState) {
		toSerialize["consumerState"] = o.ConsumerState
	}
	if !IsNil(o.LastConsumedTimestamp) {
		toSerialize["lastConsumedTimestamp"] = o.LastConsumedTimestamp
	}
	if !IsNil(o.PartitionToOffsetMap) {
		toSerialize["partitionToOffsetMap"] = o.PartitionToOffsetMap
	}
	if !IsNil(o.PartitionOffsetInfo) {
		toSerialize["partitionOffsetInfo"] = o.PartitionOffsetInfo
	}
	return toSerialize, nil
}

type NullableConsumingSegmentInfo struct {
	value *ConsumingSegmentInfo
	isSet bool
}

func (v NullableConsumingSegmentInfo) Get() *ConsumingSegmentInfo {
	return v.value
}

func (v *NullableConsumingSegmentInfo) Set(val *ConsumingSegmentInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableConsumingSegmentInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableConsumingSegmentInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConsumingSegmentInfo(val *ConsumingSegmentInfo) *NullableConsumingSegmentInfo {
	return &NullableConsumingSegmentInfo{value: val, isSet: true}
}

func (v NullableConsumingSegmentInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConsumingSegmentInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


