/*
Pinot Controller API

APIs for accessing Pinot Controller information

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the DimensionTableConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DimensionTableConfig{}

// DimensionTableConfig struct for DimensionTableConfig
type DimensionTableConfig struct {
	DisablePreload bool `json:"disablePreload"`
}

// NewDimensionTableConfig instantiates a new DimensionTableConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDimensionTableConfig(disablePreload bool) *DimensionTableConfig {
	this := DimensionTableConfig{}
	this.DisablePreload = disablePreload
	return &this
}

// NewDimensionTableConfigWithDefaults instantiates a new DimensionTableConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDimensionTableConfigWithDefaults() *DimensionTableConfig {
	this := DimensionTableConfig{}
	return &this
}

// GetDisablePreload returns the DisablePreload field value
func (o *DimensionTableConfig) GetDisablePreload() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.DisablePreload
}

// GetDisablePreloadOk returns a tuple with the DisablePreload field value
// and a boolean to check if the value has been set.
func (o *DimensionTableConfig) GetDisablePreloadOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DisablePreload, true
}

// SetDisablePreload sets field value
func (o *DimensionTableConfig) SetDisablePreload(v bool) {
	o.DisablePreload = v
}

func (o DimensionTableConfig) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DimensionTableConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	// skip: disablePreload is readOnly
	return toSerialize, nil
}

type NullableDimensionTableConfig struct {
	value *DimensionTableConfig
	isSet bool
}

func (v NullableDimensionTableConfig) Get() *DimensionTableConfig {
	return v.value
}

func (v *NullableDimensionTableConfig) Set(val *DimensionTableConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableDimensionTableConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableDimensionTableConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDimensionTableConfig(val *DimensionTableConfig) *NullableDimensionTableConfig {
	return &NullableDimensionTableConfig{value: val, isSet: true}
}

func (v NullableDimensionTableConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDimensionTableConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


