/*
Pinot Controller API

APIs for accessing Pinot Controller information

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the SegmentConsumerInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SegmentConsumerInfo{}

// SegmentConsumerInfo struct for SegmentConsumerInfo
type SegmentConsumerInfo struct {
	SegmentName *string `json:"segmentName,omitempty"`
	ConsumerState *string `json:"consumerState,omitempty"`
	LastConsumedTimestamp *int64 `json:"lastConsumedTimestamp,omitempty"`
	PartitionToOffsetMap *map[string]string `json:"partitionToOffsetMap,omitempty"`
	PartitionOffsetInfo *PartitionOffsetInfo `json:"partitionOffsetInfo,omitempty"`
}

// NewSegmentConsumerInfo instantiates a new SegmentConsumerInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSegmentConsumerInfo() *SegmentConsumerInfo {
	this := SegmentConsumerInfo{}
	return &this
}

// NewSegmentConsumerInfoWithDefaults instantiates a new SegmentConsumerInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSegmentConsumerInfoWithDefaults() *SegmentConsumerInfo {
	this := SegmentConsumerInfo{}
	return &this
}

// GetSegmentName returns the SegmentName field value if set, zero value otherwise.
func (o *SegmentConsumerInfo) GetSegmentName() string {
	if o == nil || IsNil(o.SegmentName) {
		var ret string
		return ret
	}
	return *o.SegmentName
}

// GetSegmentNameOk returns a tuple with the SegmentName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SegmentConsumerInfo) GetSegmentNameOk() (*string, bool) {
	if o == nil || IsNil(o.SegmentName) {
		return nil, false
	}
	return o.SegmentName, true
}

// HasSegmentName returns a boolean if a field has been set.
func (o *SegmentConsumerInfo) HasSegmentName() bool {
	if o != nil && !IsNil(o.SegmentName) {
		return true
	}

	return false
}

// SetSegmentName gets a reference to the given string and assigns it to the SegmentName field.
func (o *SegmentConsumerInfo) SetSegmentName(v string) {
	o.SegmentName = &v
}

// GetConsumerState returns the ConsumerState field value if set, zero value otherwise.
func (o *SegmentConsumerInfo) GetConsumerState() string {
	if o == nil || IsNil(o.ConsumerState) {
		var ret string
		return ret
	}
	return *o.ConsumerState
}

// GetConsumerStateOk returns a tuple with the ConsumerState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SegmentConsumerInfo) GetConsumerStateOk() (*string, bool) {
	if o == nil || IsNil(o.ConsumerState) {
		return nil, false
	}
	return o.ConsumerState, true
}

// HasConsumerState returns a boolean if a field has been set.
func (o *SegmentConsumerInfo) HasConsumerState() bool {
	if o != nil && !IsNil(o.ConsumerState) {
		return true
	}

	return false
}

// SetConsumerState gets a reference to the given string and assigns it to the ConsumerState field.
func (o *SegmentConsumerInfo) SetConsumerState(v string) {
	o.ConsumerState = &v
}

// GetLastConsumedTimestamp returns the LastConsumedTimestamp field value if set, zero value otherwise.
func (o *SegmentConsumerInfo) GetLastConsumedTimestamp() int64 {
	if o == nil || IsNil(o.LastConsumedTimestamp) {
		var ret int64
		return ret
	}
	return *o.LastConsumedTimestamp
}

// GetLastConsumedTimestampOk returns a tuple with the LastConsumedTimestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SegmentConsumerInfo) GetLastConsumedTimestampOk() (*int64, bool) {
	if o == nil || IsNil(o.LastConsumedTimestamp) {
		return nil, false
	}
	return o.LastConsumedTimestamp, true
}

// HasLastConsumedTimestamp returns a boolean if a field has been set.
func (o *SegmentConsumerInfo) HasLastConsumedTimestamp() bool {
	if o != nil && !IsNil(o.LastConsumedTimestamp) {
		return true
	}

	return false
}

// SetLastConsumedTimestamp gets a reference to the given int64 and assigns it to the LastConsumedTimestamp field.
func (o *SegmentConsumerInfo) SetLastConsumedTimestamp(v int64) {
	o.LastConsumedTimestamp = &v
}

// GetPartitionToOffsetMap returns the PartitionToOffsetMap field value if set, zero value otherwise.
func (o *SegmentConsumerInfo) GetPartitionToOffsetMap() map[string]string {
	if o == nil || IsNil(o.PartitionToOffsetMap) {
		var ret map[string]string
		return ret
	}
	return *o.PartitionToOffsetMap
}

// GetPartitionToOffsetMapOk returns a tuple with the PartitionToOffsetMap field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SegmentConsumerInfo) GetPartitionToOffsetMapOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.PartitionToOffsetMap) {
		return nil, false
	}
	return o.PartitionToOffsetMap, true
}

// HasPartitionToOffsetMap returns a boolean if a field has been set.
func (o *SegmentConsumerInfo) HasPartitionToOffsetMap() bool {
	if o != nil && !IsNil(o.PartitionToOffsetMap) {
		return true
	}

	return false
}

// SetPartitionToOffsetMap gets a reference to the given map[string]string and assigns it to the PartitionToOffsetMap field.
func (o *SegmentConsumerInfo) SetPartitionToOffsetMap(v map[string]string) {
	o.PartitionToOffsetMap = &v
}

// GetPartitionOffsetInfo returns the PartitionOffsetInfo field value if set, zero value otherwise.
func (o *SegmentConsumerInfo) GetPartitionOffsetInfo() PartitionOffsetInfo {
	if o == nil || IsNil(o.PartitionOffsetInfo) {
		var ret PartitionOffsetInfo
		return ret
	}
	return *o.PartitionOffsetInfo
}

// GetPartitionOffsetInfoOk returns a tuple with the PartitionOffsetInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SegmentConsumerInfo) GetPartitionOffsetInfoOk() (*PartitionOffsetInfo, bool) {
	if o == nil || IsNil(o.PartitionOffsetInfo) {
		return nil, false
	}
	return o.PartitionOffsetInfo, true
}

// HasPartitionOffsetInfo returns a boolean if a field has been set.
func (o *SegmentConsumerInfo) HasPartitionOffsetInfo() bool {
	if o != nil && !IsNil(o.PartitionOffsetInfo) {
		return true
	}

	return false
}

// SetPartitionOffsetInfo gets a reference to the given PartitionOffsetInfo and assigns it to the PartitionOffsetInfo field.
func (o *SegmentConsumerInfo) SetPartitionOffsetInfo(v PartitionOffsetInfo) {
	o.PartitionOffsetInfo = &v
}

func (o SegmentConsumerInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SegmentConsumerInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	// skip: segmentName is readOnly
	// skip: consumerState is readOnly
	// skip: lastConsumedTimestamp is readOnly
	// skip: partitionToOffsetMap is readOnly
	if !IsNil(o.PartitionOffsetInfo) {
		toSerialize["partitionOffsetInfo"] = o.PartitionOffsetInfo
	}
	return toSerialize, nil
}

type NullableSegmentConsumerInfo struct {
	value *SegmentConsumerInfo
	isSet bool
}

func (v NullableSegmentConsumerInfo) Get() *SegmentConsumerInfo {
	return v.value
}

func (v *NullableSegmentConsumerInfo) Set(val *SegmentConsumerInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableSegmentConsumerInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableSegmentConsumerInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSegmentConsumerInfo(val *SegmentConsumerInfo) *NullableSegmentConsumerInfo {
	return &NullableSegmentConsumerInfo{value: val, isSet: true}
}

func (v NullableSegmentConsumerInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSegmentConsumerInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


