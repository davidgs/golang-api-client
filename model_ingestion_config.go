/*
Pinot Controller API

APIs for accessing Pinot Controller information

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the IngestionConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IngestionConfig{}

// IngestionConfig struct for IngestionConfig
type IngestionConfig struct {
	StreamIngestionConfig *StreamIngestionConfig `json:"streamIngestionConfig,omitempty"`
	BatchIngestionConfig *BatchIngestionConfig `json:"batchIngestionConfig,omitempty"`
	SegmentTimeValueCheck *bool `json:"segmentTimeValueCheck,omitempty"`
	FilterConfig *FilterConfig `json:"filterConfig,omitempty"`
	TransformConfigs []TransformConfig `json:"transformConfigs,omitempty"`
	ComplexTypeConfig *ComplexTypeConfig `json:"complexTypeConfig,omitempty"`
	AggregationConfigs []AggregationConfig `json:"aggregationConfigs,omitempty"`
	ContinueOnError *bool `json:"continueOnError,omitempty"`
	RowTimeValueCheck *bool `json:"rowTimeValueCheck,omitempty"`
}

// NewIngestionConfig instantiates a new IngestionConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIngestionConfig() *IngestionConfig {
	this := IngestionConfig{}
	return &this
}

// NewIngestionConfigWithDefaults instantiates a new IngestionConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIngestionConfigWithDefaults() *IngestionConfig {
	this := IngestionConfig{}
	return &this
}

// GetStreamIngestionConfig returns the StreamIngestionConfig field value if set, zero value otherwise.
func (o *IngestionConfig) GetStreamIngestionConfig() StreamIngestionConfig {
	if o == nil || IsNil(o.StreamIngestionConfig) {
		var ret StreamIngestionConfig
		return ret
	}
	return *o.StreamIngestionConfig
}

// GetStreamIngestionConfigOk returns a tuple with the StreamIngestionConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IngestionConfig) GetStreamIngestionConfigOk() (*StreamIngestionConfig, bool) {
	if o == nil || IsNil(o.StreamIngestionConfig) {
		return nil, false
	}
	return o.StreamIngestionConfig, true
}

// HasStreamIngestionConfig returns a boolean if a field has been set.
func (o *IngestionConfig) HasStreamIngestionConfig() bool {
	if o != nil && !IsNil(o.StreamIngestionConfig) {
		return true
	}

	return false
}

// SetStreamIngestionConfig gets a reference to the given StreamIngestionConfig and assigns it to the StreamIngestionConfig field.
func (o *IngestionConfig) SetStreamIngestionConfig(v StreamIngestionConfig) {
	o.StreamIngestionConfig = &v
}

// GetBatchIngestionConfig returns the BatchIngestionConfig field value if set, zero value otherwise.
func (o *IngestionConfig) GetBatchIngestionConfig() BatchIngestionConfig {
	if o == nil || IsNil(o.BatchIngestionConfig) {
		var ret BatchIngestionConfig
		return ret
	}
	return *o.BatchIngestionConfig
}

// GetBatchIngestionConfigOk returns a tuple with the BatchIngestionConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IngestionConfig) GetBatchIngestionConfigOk() (*BatchIngestionConfig, bool) {
	if o == nil || IsNil(o.BatchIngestionConfig) {
		return nil, false
	}
	return o.BatchIngestionConfig, true
}

// HasBatchIngestionConfig returns a boolean if a field has been set.
func (o *IngestionConfig) HasBatchIngestionConfig() bool {
	if o != nil && !IsNil(o.BatchIngestionConfig) {
		return true
	}

	return false
}

// SetBatchIngestionConfig gets a reference to the given BatchIngestionConfig and assigns it to the BatchIngestionConfig field.
func (o *IngestionConfig) SetBatchIngestionConfig(v BatchIngestionConfig) {
	o.BatchIngestionConfig = &v
}

// GetSegmentTimeValueCheck returns the SegmentTimeValueCheck field value if set, zero value otherwise.
func (o *IngestionConfig) GetSegmentTimeValueCheck() bool {
	if o == nil || IsNil(o.SegmentTimeValueCheck) {
		var ret bool
		return ret
	}
	return *o.SegmentTimeValueCheck
}

// GetSegmentTimeValueCheckOk returns a tuple with the SegmentTimeValueCheck field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IngestionConfig) GetSegmentTimeValueCheckOk() (*bool, bool) {
	if o == nil || IsNil(o.SegmentTimeValueCheck) {
		return nil, false
	}
	return o.SegmentTimeValueCheck, true
}

// HasSegmentTimeValueCheck returns a boolean if a field has been set.
func (o *IngestionConfig) HasSegmentTimeValueCheck() bool {
	if o != nil && !IsNil(o.SegmentTimeValueCheck) {
		return true
	}

	return false
}

// SetSegmentTimeValueCheck gets a reference to the given bool and assigns it to the SegmentTimeValueCheck field.
func (o *IngestionConfig) SetSegmentTimeValueCheck(v bool) {
	o.SegmentTimeValueCheck = &v
}

// GetFilterConfig returns the FilterConfig field value if set, zero value otherwise.
func (o *IngestionConfig) GetFilterConfig() FilterConfig {
	if o == nil || IsNil(o.FilterConfig) {
		var ret FilterConfig
		return ret
	}
	return *o.FilterConfig
}

// GetFilterConfigOk returns a tuple with the FilterConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IngestionConfig) GetFilterConfigOk() (*FilterConfig, bool) {
	if o == nil || IsNil(o.FilterConfig) {
		return nil, false
	}
	return o.FilterConfig, true
}

// HasFilterConfig returns a boolean if a field has been set.
func (o *IngestionConfig) HasFilterConfig() bool {
	if o != nil && !IsNil(o.FilterConfig) {
		return true
	}

	return false
}

// SetFilterConfig gets a reference to the given FilterConfig and assigns it to the FilterConfig field.
func (o *IngestionConfig) SetFilterConfig(v FilterConfig) {
	o.FilterConfig = &v
}

// GetTransformConfigs returns the TransformConfigs field value if set, zero value otherwise.
func (o *IngestionConfig) GetTransformConfigs() []TransformConfig {
	if o == nil || IsNil(o.TransformConfigs) {
		var ret []TransformConfig
		return ret
	}
	return o.TransformConfigs
}

// GetTransformConfigsOk returns a tuple with the TransformConfigs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IngestionConfig) GetTransformConfigsOk() ([]TransformConfig, bool) {
	if o == nil || IsNil(o.TransformConfigs) {
		return nil, false
	}
	return o.TransformConfigs, true
}

// HasTransformConfigs returns a boolean if a field has been set.
func (o *IngestionConfig) HasTransformConfigs() bool {
	if o != nil && !IsNil(o.TransformConfigs) {
		return true
	}

	return false
}

// SetTransformConfigs gets a reference to the given []TransformConfig and assigns it to the TransformConfigs field.
func (o *IngestionConfig) SetTransformConfigs(v []TransformConfig) {
	o.TransformConfigs = v
}

// GetComplexTypeConfig returns the ComplexTypeConfig field value if set, zero value otherwise.
func (o *IngestionConfig) GetComplexTypeConfig() ComplexTypeConfig {
	if o == nil || IsNil(o.ComplexTypeConfig) {
		var ret ComplexTypeConfig
		return ret
	}
	return *o.ComplexTypeConfig
}

// GetComplexTypeConfigOk returns a tuple with the ComplexTypeConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IngestionConfig) GetComplexTypeConfigOk() (*ComplexTypeConfig, bool) {
	if o == nil || IsNil(o.ComplexTypeConfig) {
		return nil, false
	}
	return o.ComplexTypeConfig, true
}

// HasComplexTypeConfig returns a boolean if a field has been set.
func (o *IngestionConfig) HasComplexTypeConfig() bool {
	if o != nil && !IsNil(o.ComplexTypeConfig) {
		return true
	}

	return false
}

// SetComplexTypeConfig gets a reference to the given ComplexTypeConfig and assigns it to the ComplexTypeConfig field.
func (o *IngestionConfig) SetComplexTypeConfig(v ComplexTypeConfig) {
	o.ComplexTypeConfig = &v
}

// GetAggregationConfigs returns the AggregationConfigs field value if set, zero value otherwise.
func (o *IngestionConfig) GetAggregationConfigs() []AggregationConfig {
	if o == nil || IsNil(o.AggregationConfigs) {
		var ret []AggregationConfig
		return ret
	}
	return o.AggregationConfigs
}

// GetAggregationConfigsOk returns a tuple with the AggregationConfigs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IngestionConfig) GetAggregationConfigsOk() ([]AggregationConfig, bool) {
	if o == nil || IsNil(o.AggregationConfigs) {
		return nil, false
	}
	return o.AggregationConfigs, true
}

// HasAggregationConfigs returns a boolean if a field has been set.
func (o *IngestionConfig) HasAggregationConfigs() bool {
	if o != nil && !IsNil(o.AggregationConfigs) {
		return true
	}

	return false
}

// SetAggregationConfigs gets a reference to the given []AggregationConfig and assigns it to the AggregationConfigs field.
func (o *IngestionConfig) SetAggregationConfigs(v []AggregationConfig) {
	o.AggregationConfigs = v
}

// GetContinueOnError returns the ContinueOnError field value if set, zero value otherwise.
func (o *IngestionConfig) GetContinueOnError() bool {
	if o == nil || IsNil(o.ContinueOnError) {
		var ret bool
		return ret
	}
	return *o.ContinueOnError
}

// GetContinueOnErrorOk returns a tuple with the ContinueOnError field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IngestionConfig) GetContinueOnErrorOk() (*bool, bool) {
	if o == nil || IsNil(o.ContinueOnError) {
		return nil, false
	}
	return o.ContinueOnError, true
}

// HasContinueOnError returns a boolean if a field has been set.
func (o *IngestionConfig) HasContinueOnError() bool {
	if o != nil && !IsNil(o.ContinueOnError) {
		return true
	}

	return false
}

// SetContinueOnError gets a reference to the given bool and assigns it to the ContinueOnError field.
func (o *IngestionConfig) SetContinueOnError(v bool) {
	o.ContinueOnError = &v
}

// GetRowTimeValueCheck returns the RowTimeValueCheck field value if set, zero value otherwise.
func (o *IngestionConfig) GetRowTimeValueCheck() bool {
	if o == nil || IsNil(o.RowTimeValueCheck) {
		var ret bool
		return ret
	}
	return *o.RowTimeValueCheck
}

// GetRowTimeValueCheckOk returns a tuple with the RowTimeValueCheck field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IngestionConfig) GetRowTimeValueCheckOk() (*bool, bool) {
	if o == nil || IsNil(o.RowTimeValueCheck) {
		return nil, false
	}
	return o.RowTimeValueCheck, true
}

// HasRowTimeValueCheck returns a boolean if a field has been set.
func (o *IngestionConfig) HasRowTimeValueCheck() bool {
	if o != nil && !IsNil(o.RowTimeValueCheck) {
		return true
	}

	return false
}

// SetRowTimeValueCheck gets a reference to the given bool and assigns it to the RowTimeValueCheck field.
func (o *IngestionConfig) SetRowTimeValueCheck(v bool) {
	o.RowTimeValueCheck = &v
}

func (o IngestionConfig) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IngestionConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.StreamIngestionConfig) {
		toSerialize["streamIngestionConfig"] = o.StreamIngestionConfig
	}
	if !IsNil(o.BatchIngestionConfig) {
		toSerialize["batchIngestionConfig"] = o.BatchIngestionConfig
	}
	if !IsNil(o.SegmentTimeValueCheck) {
		toSerialize["segmentTimeValueCheck"] = o.SegmentTimeValueCheck
	}
	if !IsNil(o.FilterConfig) {
		toSerialize["filterConfig"] = o.FilterConfig
	}
	if !IsNil(o.TransformConfigs) {
		toSerialize["transformConfigs"] = o.TransformConfigs
	}
	if !IsNil(o.ComplexTypeConfig) {
		toSerialize["complexTypeConfig"] = o.ComplexTypeConfig
	}
	if !IsNil(o.AggregationConfigs) {
		toSerialize["aggregationConfigs"] = o.AggregationConfigs
	}
	if !IsNil(o.ContinueOnError) {
		toSerialize["continueOnError"] = o.ContinueOnError
	}
	if !IsNil(o.RowTimeValueCheck) {
		toSerialize["rowTimeValueCheck"] = o.RowTimeValueCheck
	}
	return toSerialize, nil
}

type NullableIngestionConfig struct {
	value *IngestionConfig
	isSet bool
}

func (v NullableIngestionConfig) Get() *IngestionConfig {
	return v.value
}

func (v *NullableIngestionConfig) Set(val *IngestionConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableIngestionConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableIngestionConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIngestionConfig(val *IngestionConfig) *NullableIngestionConfig {
	return &NullableIngestionConfig{value: val, isSet: true}
}

func (v NullableIngestionConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIngestionConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


