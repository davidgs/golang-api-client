/*
Pinot Controller API

Testing ZookeeperApiService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package openapi

import (
	"context"
	"testing"

	openapiclient "github.com/davidgs/golang-api-client"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
)

func Test_openapi_ZookeeperApiService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test ZookeeperApiService Delete", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		httpRes, err := apiClient.ZookeeperApi.Delete(context.Background()).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ZookeeperApiService GetChildren", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		httpRes, err := apiClient.ZookeeperApi.GetChildren(context.Background()).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ZookeeperApiService GetData", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		httpRes, err := apiClient.ZookeeperApi.GetData(context.Background()).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ZookeeperApiService Ls", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		httpRes, err := apiClient.ZookeeperApi.Ls(context.Background()).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ZookeeperApiService Lsl", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		httpRes, err := apiClient.ZookeeperApi.Lsl(context.Background()).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ZookeeperApiService PutChildren", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		httpRes, err := apiClient.ZookeeperApi.PutChildren(context.Background()).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ZookeeperApiService PutData", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		httpRes, err := apiClient.ZookeeperApi.PutData(context.Background()).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ZookeeperApiService Stat", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		httpRes, err := apiClient.ZookeeperApi.Stat(context.Background()).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
