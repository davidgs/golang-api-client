/*
Pinot Controller API

APIs for accessing Pinot Controller information

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the SegmentState type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SegmentState{}

// SegmentState struct for SegmentState
type SegmentState struct {
	IdealState *string `json:"idealState,omitempty"`
	ExternalView *string `json:"externalView,omitempty"`
	SegmentSize *string `json:"segmentSize,omitempty"`
	ConsumerInfo *SegmentConsumerInfo `json:"consumerInfo,omitempty"`
	ErrorInfo *SegmentErrorInfo `json:"errorInfo,omitempty"`
}

// NewSegmentState instantiates a new SegmentState object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSegmentState() *SegmentState {
	this := SegmentState{}
	return &this
}

// NewSegmentStateWithDefaults instantiates a new SegmentState object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSegmentStateWithDefaults() *SegmentState {
	this := SegmentState{}
	return &this
}

// GetIdealState returns the IdealState field value if set, zero value otherwise.
func (o *SegmentState) GetIdealState() string {
	if o == nil || IsNil(o.IdealState) {
		var ret string
		return ret
	}
	return *o.IdealState
}

// GetIdealStateOk returns a tuple with the IdealState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SegmentState) GetIdealStateOk() (*string, bool) {
	if o == nil || IsNil(o.IdealState) {
		return nil, false
	}
	return o.IdealState, true
}

// HasIdealState returns a boolean if a field has been set.
func (o *SegmentState) HasIdealState() bool {
	if o != nil && !IsNil(o.IdealState) {
		return true
	}

	return false
}

// SetIdealState gets a reference to the given string and assigns it to the IdealState field.
func (o *SegmentState) SetIdealState(v string) {
	o.IdealState = &v
}

// GetExternalView returns the ExternalView field value if set, zero value otherwise.
func (o *SegmentState) GetExternalView() string {
	if o == nil || IsNil(o.ExternalView) {
		var ret string
		return ret
	}
	return *o.ExternalView
}

// GetExternalViewOk returns a tuple with the ExternalView field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SegmentState) GetExternalViewOk() (*string, bool) {
	if o == nil || IsNil(o.ExternalView) {
		return nil, false
	}
	return o.ExternalView, true
}

// HasExternalView returns a boolean if a field has been set.
func (o *SegmentState) HasExternalView() bool {
	if o != nil && !IsNil(o.ExternalView) {
		return true
	}

	return false
}

// SetExternalView gets a reference to the given string and assigns it to the ExternalView field.
func (o *SegmentState) SetExternalView(v string) {
	o.ExternalView = &v
}

// GetSegmentSize returns the SegmentSize field value if set, zero value otherwise.
func (o *SegmentState) GetSegmentSize() string {
	if o == nil || IsNil(o.SegmentSize) {
		var ret string
		return ret
	}
	return *o.SegmentSize
}

// GetSegmentSizeOk returns a tuple with the SegmentSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SegmentState) GetSegmentSizeOk() (*string, bool) {
	if o == nil || IsNil(o.SegmentSize) {
		return nil, false
	}
	return o.SegmentSize, true
}

// HasSegmentSize returns a boolean if a field has been set.
func (o *SegmentState) HasSegmentSize() bool {
	if o != nil && !IsNil(o.SegmentSize) {
		return true
	}

	return false
}

// SetSegmentSize gets a reference to the given string and assigns it to the SegmentSize field.
func (o *SegmentState) SetSegmentSize(v string) {
	o.SegmentSize = &v
}

// GetConsumerInfo returns the ConsumerInfo field value if set, zero value otherwise.
func (o *SegmentState) GetConsumerInfo() SegmentConsumerInfo {
	if o == nil || IsNil(o.ConsumerInfo) {
		var ret SegmentConsumerInfo
		return ret
	}
	return *o.ConsumerInfo
}

// GetConsumerInfoOk returns a tuple with the ConsumerInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SegmentState) GetConsumerInfoOk() (*SegmentConsumerInfo, bool) {
	if o == nil || IsNil(o.ConsumerInfo) {
		return nil, false
	}
	return o.ConsumerInfo, true
}

// HasConsumerInfo returns a boolean if a field has been set.
func (o *SegmentState) HasConsumerInfo() bool {
	if o != nil && !IsNil(o.ConsumerInfo) {
		return true
	}

	return false
}

// SetConsumerInfo gets a reference to the given SegmentConsumerInfo and assigns it to the ConsumerInfo field.
func (o *SegmentState) SetConsumerInfo(v SegmentConsumerInfo) {
	o.ConsumerInfo = &v
}

// GetErrorInfo returns the ErrorInfo field value if set, zero value otherwise.
func (o *SegmentState) GetErrorInfo() SegmentErrorInfo {
	if o == nil || IsNil(o.ErrorInfo) {
		var ret SegmentErrorInfo
		return ret
	}
	return *o.ErrorInfo
}

// GetErrorInfoOk returns a tuple with the ErrorInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SegmentState) GetErrorInfoOk() (*SegmentErrorInfo, bool) {
	if o == nil || IsNil(o.ErrorInfo) {
		return nil, false
	}
	return o.ErrorInfo, true
}

// HasErrorInfo returns a boolean if a field has been set.
func (o *SegmentState) HasErrorInfo() bool {
	if o != nil && !IsNil(o.ErrorInfo) {
		return true
	}

	return false
}

// SetErrorInfo gets a reference to the given SegmentErrorInfo and assigns it to the ErrorInfo field.
func (o *SegmentState) SetErrorInfo(v SegmentErrorInfo) {
	o.ErrorInfo = &v
}

func (o SegmentState) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SegmentState) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	// skip: idealState is readOnly
	// skip: externalView is readOnly
	// skip: segmentSize is readOnly
	if !IsNil(o.ConsumerInfo) {
		toSerialize["consumerInfo"] = o.ConsumerInfo
	}
	if !IsNil(o.ErrorInfo) {
		toSerialize["errorInfo"] = o.ErrorInfo
	}
	return toSerialize, nil
}

type NullableSegmentState struct {
	value *SegmentState
	isSet bool
}

func (v NullableSegmentState) Get() *SegmentState {
	return v.value
}

func (v *NullableSegmentState) Set(val *SegmentState) {
	v.value = val
	v.isSet = true
}

func (v NullableSegmentState) IsSet() bool {
	return v.isSet
}

func (v *NullableSegmentState) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSegmentState(val *SegmentState) *NullableSegmentState {
	return &NullableSegmentState{value: val, isSet: true}
}

func (v NullableSegmentState) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSegmentState) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


